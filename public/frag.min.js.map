{"version":3,"sources":["webpack://frag/./src/Animations/Animation.js","webpack://frag/./src/Animations/KeyframeAnimationAction.js","webpack://frag/./src/Animations/ModelAnimation.js","webpack://frag/./src/Animations/ObjectAnimationState.js","webpack://frag/./src/Animations/ParallelAnimationAction.js","webpack://frag/./src/Animations/PositionAnimationAction.js","webpack://frag/./src/Animations/RepeatAnimationAction.js","webpack://frag/./src/Animations/SceneObjectAnimation.js","webpack://frag/./src/Animations/ValueAnimationAction.js","webpack://frag/./src/Cameras/OrthographicCamera.js","webpack://frag/./src/Cameras/PerspectiveCamera.js","webpack://frag/./src/Cameras/UiCamera.js","webpack://frag/./src/Framework/Framework.js","webpack://frag/./src/Framework/Init.js","webpack://frag/./src/Framework/Location.js","webpack://frag/./src/Framework/Observable.js","webpack://frag/./src/Framework/Transform.js","webpack://frag/./src/Framework/Transform2D.js","webpack://frag/./src/Loaders/AssetCatalog.js","webpack://frag/./src/Loaders/MaterialLoader.js","webpack://frag/./src/Loaders/ModelLoader.js","webpack://frag/./src/Materials/Material.js","webpack://frag/./src/Materials/Texture.js","webpack://frag/./src/Math/Matrix.js","webpack://frag/./src/Math/Triangle.js","webpack://frag/./src/Math/Vector.js","webpack://frag/./src/SceneGraph/MeshData.js","webpack://frag/./src/SceneGraph/MeshOptimizer.js","webpack://frag/./src/SceneGraph/Model.js","webpack://frag/./src/SceneGraph/Scene.js","webpack://frag/./src/SceneGraph/SceneObject.js","webpack://frag/./src/SceneGraph/ScenePosition.js","webpack://frag/./src/SceneGraph/VertexData.js","webpack://frag/./src/Shaders/Shader.js","webpack://frag/./src/Shaders/UiShader.js","webpack://frag/./src/Shapes/BasicCube.js","webpack://frag/./src/Shapes/Cube.js","webpack://frag/./src/Shapes/Cylinder.js","webpack://frag/./src/Shapes/Disc.js","webpack://frag/./src/Shapes/Plane.js","webpack://frag/./src/Shapes/SeparatedCube.js","webpack://frag/webpack/bootstrap","webpack://frag/./src/index.js"],"names":["window","frag","Animation","obj","isChild","private","stopAfter","public","__private","DEFAULT_STEP_DURATION","setDuration","gameTicks","duration","setInterval","interval","action","parent","gameTick","frameTick","undefined","stopAt","disposeOnStop","dispose","sequence","step","sequenceIndex","nextStepTick","stop","length","autoRestart","start","nextGameTick","frameRepeat","nextFrameTick","tickRepeat","actions","loop","Array","isArray","i","perform","repeatTicks","actionToRepeat","repeatFrames","frameCount","addAnimation","removeAnimation","KeyframeAnimationAction","startTick","currentFrame","keyframes","frames","animation","Math","floor","keyframe","data","keyframeIndex","push","ModelAnimation","channelGraphs","name","value","expandKeyframes","values","currentValue","priorKeyframe","frame","transition","startValue","slope","addChannel","channel","pattern","frameValues","ObjectAnimationState","location","Location","getMatrix","channelName","translateX","isModified","translateY","translateZ","scaleX","scaleY","scaleZ","rotateX","rotateY","rotateZ","console","warn","ParallelAnimationAction","forEach","a","PositionAnimationAction","scenePosition","invLinearVelocity","invAngularVelocity","Vector","startLocation","startRotate","moveBy","rotateBy","moveTo","rotateTo","vector","distance","eulerAngles","x","y","z","onStart","onStop","getLocation","getRotate","rotateDelta","b","delta","sub","PI","angularDelta","moveDelta","endTick","r","add","mult","rotate","RepeatAnimationAction","count","SceneObjectAnimation","animationMap","modelAnimation","childAnimations","updateFunctions","childAnimation","modelName","model","getName","animationState","graph","update","getUpdateFunction","frameAction","setFrames","getInterval","getFrames","getLoop","ValueAnimationAction","onStep","OrthographicCamera","fov","zNear","zFar","xScale","aspectRatio","worldToClipTransform","Transform","computeTransformMatrix","yScale","zScale","zOffset","identity","scaleXYZ","translateXY","moveToXY","moveToXYZ","moveToZ","frustrum","fieldOfView","setViewport","gl","viewport","canvas","clientWidth","clientHeight","width","height","adjustToViewport","drawingBufferWidth","drawingBufferHeight","matrix","setMatrix","PerspectiveCamera","locationTransform","worldTransform","perspectiveTransform","xRot","yRot","zRot","transformChanged","computeCameraTransforms","translateXYZ","rotateXYZ","computePerspectiveTransform","zt","computeTransform","transformMatrix","Matrix","m4Xm4","UiCamera","Transform2D","horizontalScale","scenes","animations","startTime","performance","now","mainScene","correctClock","serverTick","difference","gameTickMs","scene","addScene","removeScene","splice","render","t0","playAnimations","bindFramebuffer","FRAMEBUFFER","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","draw","t1","fps","setTimeout","renderInterval","startFunctions","init","document","getElementById","error","getContext","alert","clearColor","enable","CULL_FACE","DEPTH_TEST","debugMaterialLoader","debugModelLoader","debugShaderBuilder","debugAnimations","debugMeshes","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","nextTextureUnit","allocateTextureUnit","result","config","is3d","clone","other","transform","scaleXY","Observable","notify","observers","observer","fn","ObservableValue","observable","v","subscribe","unsubscribe","observableMatrix","o","scale","s","d","rad","c","cos","sin","apply","uniform","uniformMatrix4fv","m3Xm3","uniformMatrix3fv","AssetCatalog","shader","defaultTextures","defaultTexturePixels","Uint8Array","diffuse","Texture","dataFormat","RGBA","fromArrayBuffer","buffer","surface","emmissive","RGB","normal","Shader","verticiesXYZ","matrix3D","diffuseTexture","directionalLightGrey","compile","materials","models","material","Material","disposeTextures","setTexture","Model","MaterialLoader","uInt32","Uint32Array","littleEndian","loadMipV1","header","headerOffset","dataOffset","mipLevel","flags","getUint8","colorDataOffset","getUint32","log","colorTexture","surfaceDataOffset","surfaceTexture","normalMapDataOffset","normalMap","pbrDataOffset","pbrTexture","loadMaterialV1","materialStore","nameLength","String","fromCharCode","getMaterial","mip","nextMip","loadMaterialsFromBuffer","assetCatalog","bytes","DataView","version","headerLength","getUint16","textureSize","loadMaterialsFromUrl","url","onload","xhttp","XMLHttpRequest","responseType","onreadystatechange","this","readyState","status","response","open","send","ModelLoader","round4","n","round","context","objectIndex","loadMeshV1","mesh","MeshData","fragmentCount","fragmentIndex","vertexFormat","dataFlags","normalFormat","tangentFormat","bitangentFormat","uvFormat","colorFormat","meshVertexCount","indexVertexCount","isIndexed","is3D","triangleCount","msg","index","indexArray","Int16Array","verticies","normals","tangents","bitangents","uvs","colors","dataArray","Float32Array","vertexOffset","indexOffset","triangleOffset","trunc","sectionDataIndex","vertexDataIndex","vertexData","VertexData","setTriangles","setTriangles2D","setTriangleStrip","setTriangleFan","addVertexData","loadAnimationV1","channelCount","reverse","patternLength","channelNameLength","keyframeCount","j","transitionEnum","getFloat32","RegExp","loadModelV1","modelFlags","materialIndex","meshIndex","childCount","animationCount","isRoot","hasMaterial","hasMesh","getModel","meshes","modelIndex","addChild","animationIndex","channels","getChannelGraphs","channelIndex","loadModelsFromBuffer","objectSize","expectedObjectIndex","objectType","objectOffset","loadModelsFromUrl","textures","textureType","texture","shouldDispose","currentTexture","glTexture","generated","internalFormat","format","dataType","UNSIGNED_BYTE","valuesPerPixel","textureUnit","deleteTexture","disposed","LUMINANCE_ALPHA","LUMINANCE","formaat","ALPHA","setup","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","level","offset","bufferView","texImage2D","fromImage","image","load","fromUrl","crossOrigin","Image","src","fromScene","frameBuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","uniforms","activeTexture","TEXTURE0","generateMipmap","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","uniform1i","m3Identity","m3Invert","m3Transpose","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","m3Xv3","b0","b1","b2","m4Identity","m4Invert","m4Transpose","a03","a13","a23","a30","a31","a32","a33","b03","b13","b23","b30","b31","b32","b33","m4Xv4","c0r0","c0r1","c0r2","c0r3","c1r0","c1r1","c1r2","c1r3","c2r0","c2r1","c2r2","c2r3","c3r0","c3r1","c3r2","c3r3","b3","Triangle","makeTriangleFromVectors","makeTriangleFromArray2D","array","offsetA","offsetB","offsetC","makeTriangleFromArray3D","triangle","v1","v2","normalize","cross","extract2D","extract3D","zero","dimensions","div","sum","sqrt","average","dot","append","glBuffer","createBuffer","meshFragments","debugFragments","finalized","fromBuffer","smoothShading","smoothTexture","wireframe","normalLength","normalColor","calcNormals","calcTangents","calcBitangents","deleteBuffer","drawWireframe","color","Fragment","renderData","vertexDataOffset","uvDataOffset","normalDataOffset","tangentDataOffset","bitangentDataOffset","addFragment","addTriangles2D","addTriangles","addTriangleStrip","addTriangleFan","size","primitiveType","vertexDimensions","vertexCount","extractTriangles","fragment","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","addFragmentDebugInfo","newFragment","addVertex","vertex","getVertexVector","getColor","uv","getUvVector","getNormalVector","t","addNormal","setLines2D","setLines","finalize","optimizer","MeshOptimizer","setFragments","initialize","calcTangentsFromUvs","calcBitangentsFromUvs","calcNormalsFromCross","calcNormalsFromGeometry","calcBitangentsFromCross","f","countFragmentLength","copy","arr","BYTES_PER_ELEMENT","copyFragmentData","drawFragmentPosition","attributes","position","enableVertexAttribArray","vertexAttribPointer","FLOAT","disableVertexAttribArray","drawFragmentColor","colorDimensions","drawFragmentTexture","uvDimensions","drawFragmentNormals","normalDimensions","drawFragmentTangents","tangent","drawFragmentBitangents","bitangent","drawFragment","drawArrays","fragmentTriangles","groups","groupIndecies","ensureTriangles","triangles","vertexTriangleIndecies","vectorA","vectorB","vectorC","fragmentTriangle","uvA","uvB","uvC","deltaPos1","deltaPos2","deltaUv1","deltaUv2","ri","ensureGroups","equal","vertexIndex","abs","found","groupIndex","group","fragmentIndecies","calcGroupNormals","vertexNormal","calcGroupUvs","fragmentIndicies","calcSmoothShading","calcSmoothTexture","tangentIndex","triangleIndex","setTangentVector","bitangentIndex","setBitangentVector","normalIndex","getTangentVector","getBitangentVector","setNormalVector","children","meshData","flattenedChildren","predicate","child","addFlattenedChildren","ScenePosition","m","getShader","depth","shadeSmooth","shadeFlat","textureSmooth","textureFlat","drawNormals","graphs","childName","test","modelToWorldMatrix","modelToClipMatrix","localMatrix","bind","clipMatrix","modelMatrix","unbind","Scene","sceneObjects","activeCamera","cameraUpdated","sceneObject","camera","SceneObject","enabled","animationLocation","childModelName","objectAnimation","getAnimationLocation","getPosition","getAnimationPosition","clearAnimationPosition","disable","worldToClipMatrix","setLocation","getScaleX","getScaleY","getScaleZ","scaleBy","scales","scaleByXYZ","getRotateX","getRotateY","getRotateZ","euler","rotateByXYZ","getLocationX","getLocationY","getLocationZ","locationXYZ","locationX","locationY","locationZ","direction","moveByXYZ","TRIANGLES","from","coord","getVector","setVector","setVertexVector","colorIndex","setColor","uvIndex","setUvVector","addTriangle","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","setLineStrip","LINE_STRIP","createShader","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","none","textureCoords","emmissiveTexture","displacementTexture","roughnessTexture","shininessTexture","metalinessTexture","directionalLight","ambientLight","addAttributeDeclarations","vSource","addUniformDeclarations","fSource","addVaryingDeclarations","statement","addLogic","VERTEX_SHADER","FRAGMENT_SHADER","bindList","unbindList","getAttribLocation","getUniformLocation","displacementScale","uniform1f","_displacementScale","_ambientLight","lightDirection","uniform3fv","_lightDirection","lightColor","_lightColor","balanceAmbient","useProgram","uiShader","verticiesXY","matrix2D","BasicCube","options","indexes","u","corner","e","Cube","facets","drawFront","drawBack","drawTop","drawBottom","drawLeft","drawRight","u1","u2","corners","addUv","addFacetVerticies","bottomRight","topRight","bottomLeft","topLeft","addFacetUvs","uLeft","vBottom","uRight","vTop","addFace","vFacet","vFracLow","vFracHigh","vFacetBottom","vFacetTop","hFacet","hFracLow","hFracHigh","up","right","facetBottomLeft","facetBottomRight","facetTopLeft","facetTopRight","duplicateTexture","Cylinder","top","topUvs","topNormals","topColors","bottom","bottomUvs","bottomNormals","bottomColors","side","sideColors","sideUvs","sideNormals","angle","Disc","Plane","row","y0","y1","column","x0","x1","SeparatedCube","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"mappings":"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","file":"frag.min.js","sourcesContent":["﻿// The framework maintains a list of these animations and runs the animations\r\n// efficiently within the rendering cycle. All animation mechanisms use this\r\n// implementation as a base. Note that an object can be passed into the constructor\r\n// and it will be embelished with proprties and methods to make it into an animation.\r\n// This allows you to store custom fields relating to your animation and access them\r\n// within the animation steps.\r\nwindow.frag.Animation = function (obj, isChild) {\r\n    const private = {\r\n        stopAfter: 0\r\n    }\r\n\r\n    const public = obj || {};\r\n    public.__private = private;\r\n\r\n    const DEFAULT_STEP_DURATION = 100;\r\n    const DEFAULT_STEP_INTERVAL = 5;\r\n    const DEFAULT_REPEAT_TICKS = 20;\r\n    const DEFAULT_REPEAT_FRAMES = 1;\r\n\r\n    // If you set the duration it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // If you set the interval it should be done before passing this\r\n    // animation to the sequence() method of another animation\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    // This is called internally by the framework. You should not call this\r\n    // from your application code.\r\n    public.action = function (parent, gameTick, frameTick) {\r\n        if (private.stopAfter !== undefined) {\r\n            private.stopAt = gameTick + private.stopAfter;\r\n            delete private.stopAfter;\r\n        }\r\n\r\n        if (private.stopAt !== undefined && gameTick >= private.stopAt) {\r\n            if (private.disposeOnStop) public.dispose();\r\n            return;\r\n        }\r\n\r\n        if (private.sequence) {\r\n            let step = private.sequence[private.sequenceIndex];\r\n            if (private.nextStepTick) {\r\n                if (gameTick >= private.nextStepTick) {\r\n                    if (step.stop) step.stop(public, gameTick);\r\n                    private.sequenceIndex++;\r\n                    if (private.sequenceIndex === private.sequence.length) {\r\n                        if (private.autoRestart) {\r\n                            private.sequenceIndex = 0;\r\n                            step = private.sequence[private.sequenceIndex];\r\n                            if (step.start) step.start(public, gameTick);\r\n                            private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                        } else {\r\n                            private.stopAt = gameTick;\r\n                        }\r\n                    } else {\r\n                        step = private.sequence[private.sequenceIndex];\r\n                        if (step.start) step.start(public, gameTick);\r\n                        public.interval = step.interval;\r\n                        private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                    }\r\n                }\r\n            } else {\r\n                private.nextStepTick = gameTick + (step.duration || DEFAULT_STEP_DURATION);\r\n                if (step.start) step.start(public, gameTick);\r\n            }\r\n            private.action = step.action;\r\n            public.nextGameTick = gameTick + (step.interval || DEFAULT_STEP_INTERVAL);\r\n        } else if (private.frameRepeat !== undefined) {\r\n            public.nextFrameTick = frameTick + private.frameRepeat;\r\n        } else if (private.tickRepeat !== undefined) {\r\n            public.nextGameTick = gameTick + private.tickRepeat;\r\n        }\r\n\r\n        if (private.action) private.action(public, gameTick, frameTick);\r\n    }\r\n\r\n    // Defines a sequence of timed actions to perform when the animation runs\r\n    // Each action can :\r\n    // - optionally implement start() and stop() functions that are passed the animation object and the current game tick\r\n    // - optionally have a duration field that defines the number of game ticks that this action should run for\r\n    // - optionally have an interval field that defines the number of game ticks between executions of this action\r\n    // - optionally have an action() function that will be called to perform tge animation function\r\n    public.sequence = function (actions, loop) {\r\n        if (Array.isArray(actions)) \r\n            private.sequence = actions;\r\n        else\r\n            private.sequence = [actions];\r\n        private.sequenceIndex = 0;\r\n        private.autoRestart = loop;\r\n\r\n        let duration = 0;\r\n        for (let i = 0; i < private.sequence.length; i++) {\r\n            const action = private.sequence[i];\r\n            if (action.duration !== undefined)\r\n                duration = duration + action.duration;\r\n            else\r\n                duration = duration + DEFAULT_STEP_DURATION;\r\n        }\r\n        public.duration = duration;\r\n        return public;\r\n    }\r\n\r\n    // Syntactic sugar for a sequence of one action\r\n    public.perform = function(action, loop) {\r\n        return public.sequence(action, loop);\r\n    }\r\n\r\n    // Starts the animation running\r\n    public.start = function () {\r\n        delete private.nextStepTick;\r\n        delete private.stopAfter;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    // Stops the animation\r\n    public.stop = function () {\r\n        private.stopAfter = 0;\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular interval in game ticks\r\n    public.repeatTicks = function (actionToRepeat, gameTicks) {\r\n        delete private.autoRestart;\r\n        delete private.frameRepeat;\r\n        delete private.sequence;\r\n\r\n        private.tickRepeat = gameTicks || actionToRepeat.interval || DEFAULT_REPEAT_TICKS;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Executes an action function at a regular number of frame refreshes\r\n    public.repeatFrames = function (actionToRepeat, frameCount) {\r\n        delete private.autoRestart;\r\n        delete private.tickRepeat;\r\n        delete private.sequence;\r\n\r\n        private.frameRepeat = frameCount || DEFAULT_REPEAT_FRAMES;\r\n        private.action = actionToRepeat;\r\n\r\n        return public;\r\n    }\r\n\r\n    // Automatically stops the animation after the specified number of game ticks\r\n    public.stopAfter = function (gameTicks) {\r\n        private.stopAfter = gameTicks;\r\n        delete private.stopAt;\r\n        return public;\r\n    }\r\n\r\n    public.disposeOnStop = function(dispose){\r\n        private.disposeOnStop = dispose;\r\n    }\r\n\r\n    if (!isChild) window.frag.addAnimation(public);\r\n\r\n    public.dispose = function () {\r\n        window.frag.removeAnimation(public);\r\n    }\r\n\r\n    return public;\r\n}\r\n\r\n","﻿// Provides a mechanism to execute animation actions at specific keyframes\r\n// KeyframeAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.KeyframeAnimationAction = function () {\r\n    const private = {\r\n        startTick: undefined,\r\n        currentFrame: undefined,\r\n        keyframes: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        interval: 10,\r\n        frames: 100,\r\n    };\r\n\r\n    // This function is used internally\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.currentFrame = -1;\r\n        return public;\r\n    }\r\n\r\n    // This function is used internally\r\n    public.action = function (animation, gameTick) {\r\n        let currentFrame = Math.floor((gameTick - private.startTick) / public.interval);\r\n        while (private.currentFrame < currentFrame) {\r\n            private.currentFrame++;\r\n            const keyframe = private.keyframes[private.currentFrame];\r\n            if (keyframe) {\r\n                for (let i = 0; i < keyframe.length; i++)\r\n                    keyframe[i].action(private.currentFrame, keyframe[i].data, gameTick);\r\n            }\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.setFrames = function(interval, frames){\r\n        public.interval = interval;\r\n        public.frames = frames || public.frames;\r\n        public.duration = public.interval * public.frames;\r\n        return public;\r\n    }\r\n\r\n    // Adds an action to perform at a specific keyframe. The data object will\r\n    // be passed to the action function when the keyframe is actioned\r\n    public.add = function(keyframeIndex, action, data){\r\n        let keyframe = private.keyframes[keyframeIndex];\r\n        if (!keyframe) {\r\n            keyframe = [];\r\n            private.keyframes[keyframeIndex] = keyframe;\r\n        }\r\n        keyframe.push({ action, data });\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Defines an animation that can be applied to scene objects based on a particular model\r\nwindow.frag.ModelAnimation = function () {\r\n    const private = {\r\n        loop: false,\r\n        interval: 10,\r\n        frames: 50,\r\n        channelGraphs: [],\r\n        name: \"\",\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.getChannelGraphs = function () {\r\n        return private.channelGraphs;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.loop = function (value) {\r\n        private.loop = value;\r\n        return public;\r\n    }\r\n\r\n    public.getLoop = function () {\r\n        return private.loop;\r\n    }\r\n\r\n    public.interval = function (value) {\r\n        private.interval = value;\r\n        return public;\r\n    }\r\n\r\n    public.getInterval = function () {\r\n        return private.interval;\r\n    }\r\n\r\n    public.frames = function (value) {\r\n        private.frames = value;\r\n        return public;\r\n    }\r\n\r\n    public.getFrames = function () {\r\n        return private.frames;\r\n    }\r\n\r\n    const expandKeyframes = function (keyframes) {\r\n        const values = [];\r\n        values.length = private.frames;\r\n        let currentValue = undefined;\r\n        let priorKeyframe = 0;\r\n        for (let frame = 0; frame < private.frames; frame++) {\r\n            const keyframe = keyframes[frame];\r\n            if (keyframe !== undefined) {\r\n                currentValue = keyframe.value;\r\n                if (keyframe.transition === \"linear\") {\r\n                    const startValue = values[priorKeyframe];\r\n                    const steps = frame - priorKeyframe;\r\n                    const range = currentValue - startValue;\r\n                    const slope = range / steps;\r\n                    for (let i = priorKeyframe + 1; i < frame; i++) {\r\n                        values[i] = startValue + (i - priorKeyframe) * slope;\r\n                    }\r\n                }\r\n                priorKeyframe = frame;\r\n            }\r\n            values[frame] = currentValue;\r\n        }\r\n        return values;\r\n    };\r\n\r\n    // Build a graph of channel values at each frame based on keyframe changes\r\n\r\n    public.addChannel = function (channel) {\r\n        private.channelGraphs.push({\r\n            pattern: channel.pattern,\r\n            channel: channel.channel,\r\n            frameValues: expandKeyframes(channel.keyframes)\r\n        });\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿// Represents the current state of an object being animated\r\nwindow.frag.ObjectAnimationState = function () {\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: window.frag.Location(),\r\n    };\r\n\r\n    public.getMatrix = function () {\r\n        return public.location.getMatrix();\r\n    }\r\n\r\n    public.getUpdateFunction = function(channelName) {\r\n        switch (channelName) {\r\n            case \"translate-x\":\r\n                return function (value) {\r\n                    public.location.translateX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-y\":\r\n                return function (value) {\r\n                    public.location.translateY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"translate-z\":\r\n                return function (value) {\r\n                    public.location.translateZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"scale-x\":\r\n                return function (value) {\r\n                    public.location.scaleX = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-y\":\r\n                return function (value) {\r\n                    public.location.scaleY = value;\r\n                    public.location.isModified = true;\r\n                };\r\n            case \"scale-z\":\r\n                return function (value) {\r\n                    public.location.scaleZ = value;\r\n                    public.location.isModified = true;\r\n                }\r\n\r\n            case \"rotate-x\":\r\n                return function (value) {\r\n                    public.location.rotateX = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-y\":\r\n                return function (value) {\r\n                    public.location.rotateY = value;\r\n                    public.location.isModified = true;\r\n                }\r\n            case \"rotate-z\":\r\n                return function (value) {\r\n                    public.location.rotateZ = value;\r\n                    public.location.isModified = true;\r\n                };\r\n        }\r\n        console.warn(\"Unsupported animation channel \" + channelName);\r\n        return function () { };\r\n    };\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.ParallelAnimationAction = function ([actions]) {\r\n    const private = {\r\n        actions\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.start) a.start(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.action) a.action(animation, gameTick);\r\n        });\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        private.actions.forEach(a => {\r\n            if (a.stop) a.stop(animation, gameTick);\r\n        });\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to move an object in the scene at a specific speed\r\nwindow.frag.PositionAnimationAction = function (scenePosition, invLinearVelocity, invAngularVelocity) {\r\n    const frag = window.frag;\r\n    const Vector = frag.Vector;\r\n\r\n    const private = {\r\n        scenePosition,\r\n        invLinearVelocity,\r\n        invAngularVelocity,\r\n        startLocation: undefined,\r\n        startRotate: undefined,\r\n        moveBy: undefined,\r\n        rotateBy: undefined,\r\n        moveTo: undefined,\r\n        rotateTo: undefined,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function (vector, invLinearVelocity) {\r\n        invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invLinearVelocity * distance + 1);\r\n        private.moveBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.moveTo = function (location, invLinearVelocity) {\r\n        if (invLinearVelocity) private.invAngularVelocity = undefined;\r\n        private.invLinearVelocity = invLinearVelocity || private.invLinearVelocity || 1;\r\n        private.moveTo = location;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function (vector, invAngularVelocity) {\r\n        invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        let distance = Vector.length(vector);\r\n        public.duration = Math.floor(invAngularVelocity * distance + 1);\r\n        private.rotateBy = vector;\r\n        return public;\r\n    }\r\n\r\n    public.rotateTo = function (eulerAngles, invAngularVelocity) {\r\n        if (invAngularVelocity) private.invLinearVelocity = undefined;\r\n        private.invAngularVelocity = invAngularVelocity || private.invAngularVelocity || 10;\r\n        private.rotateTo = eulerAngles;\r\n        return public;\r\n    }\r\n\r\n\r\n    public.moveByXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveBy([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveByXY = function (x, y, invLinearVelocity) {\r\n        return public.moveBy([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z, invLinearVelocity) {\r\n        return public.moveTo([x, y, z], invLinearVelocity);\r\n    }\r\n\r\n    public.moveToXY = function (x, y, invLinearVelocity) {\r\n        return public.moveTo([x, y, 0], invLinearVelocity);\r\n    }\r\n\r\n\r\n    public.rotateByXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateBy([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateByXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateBy([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXYZ = function (x, y, z, invAngularVelocity) {\r\n        return public.rotateTo([x, y, z], invAngularVelocity);\r\n    }\r\n\r\n    public.rotateToXY = function (x, y, invAngularVelocity) {\r\n        return public.rotateTo([x, y, 0], invAngularVelocity);\r\n    }\r\n\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    const angularDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        for (let i = 0; i < delta.length; i++) {\r\n            if (delta[i] < -Math.PI) delta[i] = Math.PI * 2 + delta[i];\r\n            if (delta[i] > Math.PI) delta[i] = -Math.PI * 2 + delta[i];\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    const linearDelta = function(a, b) {\r\n        const delta = Vector.sub(a, b);\r\n        return delta;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startLocation = private.scenePosition.getLocation();\r\n        private.startRotate = private.scenePosition.getRotate();\r\n\r\n        if (private.rotateTo && private.invAngularVelocity) {\r\n            private.rotateDelta = angularDelta(private.rotateTo, private.startRotate);\r\n            const distance = Vector.length(private.rotateDelta);\r\n            public.duration = Math.floor(private.invAngularVelocity * distance + 1);\r\n        }\r\n\r\n        if (private.moveTo && private.invLinearVelocity) {\r\n            private.moveDelta = linearDelta(private.moveTo, private.startLocation);\r\n            const distance = Vector.length(private.moveDelta);\r\n            public.duration = Math.floor(private.invLinearVelocity * distance + 1);\r\n        }\r\n\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        const r = (gameTick - private.startTick) / public.duration;\r\n        let moveBy = private.moveBy;\r\n        let rotateBy = private.rotateBy;\r\n\r\n        if (private.moveDelta) \r\n            moveBy = private.moveDelta;\r\n\r\n        if (private.rotateDelta)\r\n            rotateBy = private.rotateDelta;\r\n\r\n        if (moveBy) \r\n            private.scenePosition.location(Vector.add(private.startLocation, Vector.mult(moveBy, r)));\r\n\r\n        if (rotateBy) \r\n            private.scenePosition.rotate(Vector.add(private.startRotate, Vector.mult(rotateBy, r)));\r\n\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// Provides a mechanism to execute another animation action a specific\r\n// number of times\r\nwindow.frag.RepeatAnimationAction = function (action, count) {\r\n    return {\r\n        duration: action.duration * count,\r\n        interval: action.interval,\r\n        start: action.start,\r\n        stop: action.stop,\r\n        action: action.action\r\n    };\r\n}\r\n","﻿// Constructs a model animation in the context of a scene object\r\n// For example this could be the \"moving\" animation for a model. Constructing this\r\n// object enables you to start and stop this animation on a specific scene object\r\nwindow.frag.SceneObjectAnimation = function (animation, animationMap) {\r\n    const modelAnimation = animation.modelAnimation;\r\n    const childAnimations = animation.childAnimations;\r\n\r\n    const updateFunctions = [];\r\n\r\n    for (let i = 0; i < childAnimations.length; i++) {\r\n        const childAnimation = childAnimations[i];\r\n        const modelName = childAnimation.model.getName();\r\n        animationState = animationMap[modelName];\r\n        if (animationState) {\r\n            const graph = childAnimation.graph;\r\n            const update = animationState.getUpdateFunction(graph.channel);\r\n            updateFunctions.push(function (frame) {\r\n                update(graph.frameValues[frame]);\r\n            });\r\n        }\r\n    }\r\n\r\n    const frameAction = function (frame) {\r\n        for (let i = 0; i < updateFunctions.length; i++) {\r\n            updateFunctions[i](frame);\r\n        }\r\n    }\r\n\r\n    const action = window.frag.KeyframeAnimationAction()\r\n        .setFrames(modelAnimation.getInterval(), modelAnimation.getFrames());\r\n\r\n    for (let frame = 0; frame < modelAnimation.getFrames(); frame++) {\r\n        action.add(frame, frameAction);\r\n    }\r\n\r\n    return window.frag.Animation()\r\n        .perform(action, modelAnimation.getLoop());\r\n}\r\n","﻿// Provides a mechanism to change a value over time. For example smoothly change\r\n// one color into another or smoothly move an object within the scene.\r\n// ValueAnimationAction objects can be passed to an Animation object as the action\r\n// to take in one of the steps in an animation sequence\r\nwindow.frag.ValueAnimationAction = function () {\r\n    const private = {};\r\n\r\n    const public = {\r\n        __private: private,\r\n        duration: 30,\r\n        interval: 5,\r\n    };\r\n\r\n    public.setDuration = function (gameTicks) {\r\n        public.duration = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.setInterval = function (gameTicks) {\r\n        public.interval = gameTicks;\r\n        return public;\r\n    }\r\n\r\n    public.onStart = function (onStart) {\r\n        private.onStart = onStart;\r\n        return public;\r\n    }\r\n\r\n    public.onStop = function (onStop) {\r\n        private.onStop = onStop;\r\n        return public;\r\n    }\r\n\r\n    public.onStep = function (onStep) {\r\n        private.onStep = onStep;\r\n        return public;\r\n    }\r\n\r\n    public.start = function (animation, gameTick) {\r\n        private.startTick = gameTick;\r\n        private.endTick = gameTick + public.duration;\r\n        if (private.onStart) private.onStart(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    public.action = function (animation, gameTick) {\r\n        if (private.onStep) {\r\n            const r = (gameTick - private.startTick) / public.duration;\r\n            private.onStep(animation, r, public, gameTick);\r\n        }\r\n        return public;\r\n    }\r\n\r\n    public.stop = function (animation, gameTick) {\r\n        if (private.onStop) private.onStop(animation, public, gameTick);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿// This camera draws objects in their actual size regardless of how far from the camera they are.\r\n// The frustrum affects z clip space and XY scaling to the viewport but does not scale objects in the scene\r\n\r\nwindow.frag.OrthographicCamera = function () {\r\n    const private = {\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        fov: 35 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    const computeTransformMatrix = function () {\r\n        const xScale = 1 / private.xScale;\r\n        const yScale = private.aspectRatio / private.xScale;\r\n\r\n        const zScale = 2 / (private.zFar - private.zNear);\r\n        const zOffset = 1 - (private.zFar * zScale);\r\n\r\n        public.worldToClipTransform\r\n            .identity()\r\n            .translateZ(zOffset)\r\n            .scaleXYZ(xScale, yScale, zScale)\r\n            .translateXY(-private.x, -private.y);\r\n    }\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n\r\n        computeTransformMatrix();\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[5] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public makes objects closer to the public appear larger. The frustrum\r\n// defines clipping and scaling of the scene\r\n\r\nwindow.frag.PerspectiveCamera = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        locationTransform: window.frag.Transform(),\r\n        worldTransform: window.frag.Transform(),\r\n        perspectiveTransform: window.frag.Transform(),\r\n        x: 0,\r\n        y: 0,\r\n        z: -200,\r\n        xRot: 0,\r\n        yRot: 0,\r\n        zRot: 0,\r\n        fov: 45 * Math.PI / 180,\r\n        zNear: -100,\r\n        zFar: 100,\r\n        xScale: 100,\r\n        aspectRatio: 1,\r\n        transformChanged: true\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        worldToClipTransform: window.frag.Transform()\r\n    };\r\n\r\n    private.computeCameraTransforms = function () {\r\n        // Position of the camera within the world\r\n        private.locationTransform\r\n            .identity()\r\n            .translateXYZ(private.x, private.y, private.z)\r\n            .rotateXYZ(private.xRot, private.yRot, private.zRot);\r\n\r\n        // Position the world with the camera at the origin\r\n        private.worldTransform\r\n            .identity()\r\n            .rotateXYZ(-private.xRot, -private.yRot, -private.zRot)\r\n            .scaleXYZ(1 / private.xScale, private.aspectRatio / private.xScale, 2 / (private.zFar - private.zNear))\r\n            .translateXYZ(-private.x, -private.y, -private.z);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computePerspectiveTransform = function () {\r\n        // TODO: calculate based on private.fov\r\n        const ps = 0.5;\r\n        const pt = 0.7;\r\n\r\n        // Note that the world transform already transforms the frustrum into a 2x2x2 cube at zNear\r\n        const xs = 1;\r\n        const ys = 1;\r\n        const zs = 1;\r\n\r\n        const xt = 0;\r\n        const yt = 0;\r\n        const zt = -2 * (private.zNear - private.z) / (private.zFar - private.zNear) - 1;\r\n\r\n        const __ = 0;\r\n\r\n        private.perspectiveTransform.setMatrix([\r\n            xs, __, __, __,\r\n            __, ys, __, __,\r\n            __, __, zs, ps,\r\n            xt, yt, zt, pt,\r\n        ]);\r\n\r\n        private.transformChanged = true;\r\n    }\r\n\r\n    private.computeTransform = function () {\r\n        const transformMatrix = frag.Matrix.m4Xm4(\r\n            private.perspectiveTransform.getMatrix(),\r\n            private.worldTransform.getMatrix());\r\n        public.worldToClipTransform.setMatrix(transformMatrix);\r\n\r\n        /*\r\n        // Opposite corners of frustrum should be [-1, -1, -1] and [1, 1, 1] in clip space\r\n        const t = function (matrix, x, y, z) {\r\n            const v = frag.Matrix.m4Xv4(matrix, [x, y, z, 1]);\r\n            v[0] = v[0] / v[3];\r\n            v[1] = v[1] / v[3];\r\n            v[2] = v[2] / v[3];\r\n            return v;\r\n        }\r\n\r\n        const gradient = 1 / Math.tan((Math.PI - private.fov) * 0.5);\r\n        const nearWidth = private.xScale * gradient;\r\n        const farWidth = nearWidth + (private.zFar - private.zNear) * gradient;\r\n        const t1 = t(private.worldTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t2 = t(private.worldTransform, farWidth, farWidth, private.zFar);\r\n\r\n        const t3 = t(public.worldToClipTransform, -nearWidth, -nearWidth, private.zNear);\r\n        const t4 = t(public.worldToClipTransform, farWidth, farWidth, private.zFar);\r\n        */\r\n    }\r\n\r\n    private.computeCameraTransforms();\r\n    private.computePerspectiveTransform();\r\n\r\n    public.moveToXY = function (x, y) {\r\n        private.x = x;\r\n        private.y = y;\r\n\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.moveToZ = function (z) {\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.moveToXYZ = function (x, y, z) {\r\n        private.x = x;\r\n        private.y = y;\r\n        private.z = z;\r\n\r\n        private.computeCameraTransforms();\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.frustrum = function (fieldOfView, zNear, zFar) {\r\n        private.fov = fieldOfView;\r\n        private.zNear = zNear;\r\n        private.zFar = zFar;\r\n\r\n        private.computePerspectiveTransform();\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.xScale = x;\r\n        private.computeCameraTransforms();\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (aspectRatio != private.aspectRatio) {\r\n            private.aspectRatio = aspectRatio;\r\n            private.computeCameraTransforms();\r\n        }\r\n\r\n        if (private.transformChanged) {\r\n            private.computeTransform();\r\n            private.transformChanged = false;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// This public draws 2D shapes scaled to the width of the viewport.\r\n// It is designed to be used in conjunction with the UiShader which will project onto the front of the viewport.\r\n\r\nwindow.frag.UiCamera = function () {\r\n\r\n    const private = {\r\n        aspectRatio: 1};\r\n\r\n    const public = {\r\n        worldToClipTransform: window.frag.Transform2D().identity()\r\n    };\r\n\r\n    public.scaleX = function (horizontalScale) {\r\n        var matrix = public.worldToClipTransform.getMatrix();\r\n        matrix[0] = 1 / horizontalScale;\r\n        public.worldToClipTransform.setMatrix(matrix);\r\n        private.aspectRatio = -1;\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n        gl.canvas.width = gl.canvas.clientWidth;\r\n        gl.canvas.height = gl.canvas.clientHeight;\r\n\r\n        return public.adjustToViewport(gl);\r\n    };\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        const aspectRatio = gl.drawingBufferWidth / gl.drawingBufferHeight;\r\n\r\n        if (private.aspectRatio != aspectRatio) {\r\n            const matrix = public.worldToClipTransform.getMatrix();\r\n            matrix[4] = matrix[0] * aspectRatio;\r\n            public.worldToClipTransform.setMatrix(matrix);\r\n\r\n            private.aspectRatio = aspectRatio;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿(function() {\r\n    const frag = window.frag;\r\n    const scenes = [];\r\n    const animations = [];\r\n    let startTime = performance.now();\r\n    let gameTick = 0;\r\n    let frameTick = 0;\r\n    let mainScene = null;\r\n\r\n    frag.correctClock = function(serverTick) {\r\n        let difference = serverTick - gameTick;\r\n        if (difference > 0) {\r\n            startTime += frag.gameTickMs;\r\n        } else if (difference < 0) {\r\n            startTime -= frag.gameTickMs;\r\n        }\r\n    }\r\n\r\n    frag.mainScene = function (scene) {\r\n        if (mainScene) mainScene.dispose();\r\n        mainScene = scene;\r\n        return frag;\r\n    }\r\n\r\n    frag.addScene = function (scene) {\r\n        scenes.push(scene);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeScene = function (scene) {\r\n        for (let i = 0; i < scenes.length; i++) {\r\n            if (scenes[i] === scene) {\r\n                scenes.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    frag.addAnimation = function (animation) {\r\n        animations.push(animation);\r\n        return frag;\r\n    };\r\n\r\n    frag.removeAnimation = function (animation) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            if (animations[i] === animation) {\r\n                animations.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const playAnimations = function (gameTick, frameTick) {\r\n        for (let i = 0; i < animations.length; i++) {\r\n            // TODO: sort animations into buckets according to how far away from next step\r\n            // TODO: keep a separate list of animations that are stopped\r\n            let animation = animations[i];\r\n            if (animation.nextFrameTick !== undefined) {\r\n                if (frameTick >= animation.nextFrameTick) {\r\n                    animation.nextFrameTick = frameTick + 10;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else if (animation.nextGameTick != undefined) {\r\n                if (gameTick >= animation.nextGameTick) {\r\n                    animation.nextGameTick = gameTick + 5;\r\n                    animation.action(null, gameTick, frameTick);\r\n                }\r\n            } else {\r\n                animation.nextGameTick = gameTick + 5;\r\n            }\r\n        }\r\n    };\r\n\r\n    const render = function () {\r\n        if (mainScene) {\r\n            let gl = frag.gl;\r\n\r\n            const t0 = performance.now();\r\n            gameTick = Math.floor((t0 - startTime) / window.frag.gameTickMs);\r\n            frameTick++;\r\n\r\n            playAnimations(gameTick, frameTick);\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            mainScene.setViewport(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            mainScene.draw(gl);\r\n\r\n            for (let i = 0; i < scenes.length; i++) {\r\n                scenes[i].adjustToViewport(gl);\r\n                scenes[i].draw(gl);\r\n            }\r\n\r\n            const t1 = performance.now();\r\n            frag.fps = 1000 / (t1 - t0);\r\n        }\r\n        setTimeout(render, frag.renderInterval);\r\n    }\r\n    window.frag.startFunctions.push(render);\r\n})();\r\n","﻿/* To customize Frag for your application, assign an object\r\n   to window.frag before loading the Frag library. The object you \r\n   assign can contain the canvas to draw on and an initialization \r\n   function as illustrated by the following example:\r\n\r\nwindow.frag = {\r\n    canvas: document.getElementById(\"my-canvas\"),\r\n    config: function(frag) {\r\n        frag.gl.clearColor(0, 0, 0, 1);\r\n        frag.debugShaderBuilder = true;\r\n        frag.renderInterval = 10;\r\n        frag.gameTickMs = 50;\r\n    }\r\n};\r\n*/\r\nwindow.frag = window.frag || {};\r\n\r\nwindow.frag.startFunctions = [];\r\n\r\nwindow.frag.init = function () {\r\n    const frag = window.frag;\r\n    frag.canvas = frag.canvas || document.getElementById(\"scene\");\r\n    if (!frag.canvas){\r\n        console.error('No canvas with id of \"scene\" in the page');\r\n        return null;\r\n    }\r\n\r\n    const gl = frag.canvas.getContext(\"webgl\");\r\n    if (!gl) {\r\n        alert(\"WebGL is not available\");\r\n        return null;\r\n    }\r\n    frag.gl = gl;\r\n\r\n    gl.clearColor(1, 1, 1, 1);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    frag.renderInterval = 15;\r\n    frag.gameTickMs = 10;\r\n\r\n    frag.debugMaterialLoader = false;\r\n    frag.debugModelLoader = false;\r\n    frag.debugShaderBuilder = false;\r\n    frag.debugAnimations = false;\r\n    frag.debugMeshes = false;\r\n\r\n    frag.maxTextureUnits = frag.gl.getParameter(frag.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    frag.nextTextureUnit = 0;\r\n    frag.allocateTextureUnit = function () {\r\n        const result = frag.nextTextureUnit;\r\n        frag.nextTextureUnit = (frag.nextTextureUnit + 1) % frag.maxTextureUnits;\r\n        return result;\r\n    };\r\n\r\n    if (frag.config) frag.config(frag);\r\n\r\n    for (var i = 0; i < frag.startFunctions.length; i++)\r\n        frag.startFunctions[i](frag);\r\n\r\n    return frag;\r\n};\r\n","// Represents a location, scale and orientation\r\nwindow.frag.Location = function (is3d) {\r\n    const public = {\r\n        is3d,\r\n        isModified: false,\r\n        matrix: null,\r\n        translateX: 0,\r\n        translateY: 0,\r\n        translateZ: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotateX: 0,\r\n        rotateY: 0,\r\n        rotateZ: 0\r\n    };\r\n\r\n    public.clone = function() {\r\n        const clone = window.frag.Location(public.is3d);\r\n        clone.isModified = public.isModified;\r\n        clone.matrix = public.matrix;\r\n        clone.translateX = public.translateX;\r\n        clone.translateY = public.translateY;\r\n        clone.translateZ = public.translateZ;\r\n        clone.scaleX = public.scaleX;\r\n        clone.scaleY = public.scaleY;\r\n        clone.scaleZ = public.scaleZ;\r\n        clone.rotateX = public.rotateX;\r\n        clone.rotateY = public.rotateY;\r\n        clone.rotateZ = public.rotateZ;\r\n        return clone;\r\n    }\r\n\r\n    public.add = function(other) {\r\n        public.translateX += other.translateX;\r\n        public.translateY += other.translateY;\r\n        public.translateZ += other.translateZ;\r\n        public.scaleX *= other.scaleX;\r\n        public.scaleY *= other.scaleY;\r\n        public.scaleZ *= other.scaleZ;\r\n        public.rotateX += other.rotateX;\r\n        public.rotateY += other.rotateY;\r\n        public.rotateZ += other.rotateZ;\r\n        public.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        if (public.matrix && !public.isModified)\r\n            return public.matrix;\r\n\r\n        let transform;\r\n        if (public.is3d) {\r\n            transform = window.frag.Transform()\r\n                .translateXYZ(public.translateX, public.translateY, public.translateZ)\r\n                .rotateXYZ(public.rotateX, public.rotateY, public.rotateZ)\r\n                .scaleXYZ(public.scaleX, public.scaleY, public.scaleZ);\r\n        } else {\r\n            transform = window.frag.Transform2D()\r\n                .translateXY(public.translateX, public.translateY)\r\n                .rotate(public.rotateZ)\r\n                .scaleXY(public.scaleX, public.scaleY);\r\n        }\r\n\r\n        public.matrix = transform.getMatrix();\r\n        public.isModified = false;\r\n\r\n        return public.matrix;\r\n    }\r\n\r\n    return public;\r\n}","﻿window.frag.Observable = function (notify) {\r\n    const private = {\r\n        notify,\r\n        observers: []\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.subscribe = function (observer) {\r\n        private.observers.push(observer);\r\n        private.notify(observer);\r\n    };\r\n\r\n    public.unsubscribe = function (observer) {\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            if (private.observers[i] === observer) {\r\n                private.observers.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    public.notify = function (fn) {\r\n        fn = fn || private.notify || (function (observer) { observer(); });\r\n        for (let i = 0; i < private.observers.length; i++) {\r\n            fn(private.observers[i]);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\nwindow.frag.ObservableValue = function () {\r\n    let value = null;\r\n    const observable = frag.Observable((fn) => { fn(value); });\r\n\r\n    const public = {};\r\n\r\n    public.get = function () {\r\n        return value;\r\n    }\r\n\r\n    public.set = function (v) {\r\n        value = v;\r\n        observable.notify();\r\n    }\r\n\r\n    public.subscribe = function (fn) {\r\n        return observable.subscribe(fn);\r\n    }\r\n\r\n    public.unsubscribe = function (fn) {\r\n        return observable.unsubscribe(fn);\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n/*\r\nconst observedValue = window.frag.ObservableValue();\r\nobservedValue.set(42);\r\n\r\nlet observer1 = function (v) { console.log(\"Observer 1 received \" + v); }\r\nobservedValue.subscribe(observer1);\r\n\r\nobservedValue.set(43);\r\n\r\nlet observer2 = function (v) { console.log(\"Observer 2 received \" + v); }\r\nobservedValue.subscribe(observer2);\r\n\r\nobservedValue.unsubscribe(observer1);\r\n\r\nobservedValue.set(44);\r\n*/","﻿// This is a wrapper around a 4x4 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: true,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m4Xm4(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleX = function (s) {\r\n        return private.transform([\r\n            s, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleY = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, s, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleZ = function (s) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, s, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            x, _, _, _,\r\n            _, y, _, _,\r\n            _, _, z, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            d, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateZ = function (d) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            _, _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXYZ = function (x, y, z) {\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, 1, _, _,\r\n            _, _, 1, _,\r\n            x, y, z, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateX = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            1, _, _, _,\r\n            _, c, s, _,\r\n            _,-s, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateY = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, _,-s, _,\r\n            _, 1, _, _,\r\n            s, _, c, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateZ = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c, s, _, _,\r\n           -s, c, _, _,\r\n            _, _, 1, _,\r\n            _, _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        if (x) public.rotateX(x);\r\n        if (y) public.rotateY(y);\r\n        if (z) public.rotateZ(z);\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix4fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n\r\n// Unit tests for Transform\r\n/*\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.transform = {\r\n    check: function (name, transform, vector, expected) {\r\n        const result = window.frag.Matrix.m4Xv4(transform.getMatrix(), vector);\r\n        window.tests.expectArray(name, expected, result);\r\n    },\r\n    t1: window.frag.Transform().identity(),\r\n    t2: window.frag.Transform().scaleXYZ(2, 3, 4).translateXYZ(1, 2, 3),\r\n    t3: window.frag.Transform().translateXYZ(1, 2, 3).scaleXYZ(2, 3, 4),\r\n\r\n    run: function (test) {\r\n        test.check(\"Identity matrix\", test.t1, [9, 13, 56, 1], [9, 13, 56, 1]);\r\n        test.check(\"Scale+translate matrix\", test.t2, [1, 1, 1, 1], [4, 9, 16, 1]);\r\n        test.check(\"Translate+scale matrix\", test.t3, [1, 1, 1, 1], [3, 5, 7, 1]);\r\n    }\r\n};\r\n\r\nwindow.tests.transform.run(window.tests.transform);\r\n*/","﻿// This is a wrapper around a 3x3 matrix. It provides methods to operate on the matrix\r\n// and can appply the matrix to a shader for rendering. It also provides an observable\r\n// that you can subscribe to changes in the matrix\r\nwindow.frag.Transform2D = function (matrix) {\r\n    const frag = window.frag;\r\n    const _ = 0;\r\n\r\n    const private = {\r\n        matrix\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        observableMatrix: window.frag.Observable((o) => { o(private.matrix) }),\r\n        is3d: false,\r\n    };\r\n\r\n    public.clone = function (matrix) {\r\n        return window.frag.Transform2D(matrix || private.matrix);\r\n    }\r\n\r\n    public.getMatrix = function () {\r\n        return private.matrix;\r\n    }\r\n\r\n    public.setMatrix = function (matrix) {\r\n        private.matrix = matrix;\r\n        public.observableMatrix.notify();\r\n        return public;\r\n    }\r\n\r\n    private.transform = function (matrix) {\r\n        if (private.matrix)\r\n            return public.setMatrix(frag.Matrix.m3Xm3(private.matrix, matrix));\r\n        return public.setMatrix(matrix);\r\n    }\r\n\r\n    public.identity = function () {\r\n        return public.setMatrix([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        return private.transform([\r\n            s, _, _,\r\n            _, s, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.scaleXY = function (x, y) {\r\n        return private.transform([\r\n            x, _, _,\r\n            _, y, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateX = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            d, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateY = function (d) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            _, d, 1,\r\n        ]);\r\n    }\r\n\r\n    public.translateXY = function (x, y) {\r\n        return private.transform([\r\n            1, _, _,\r\n            _, 1, _,\r\n            x, y, 1,\r\n        ]);\r\n    }\r\n\r\n    public.rotate = function (rad) {\r\n        var c = Math.cos(rad);\r\n        var s = Math.sin(rad);\r\n        return private.transform([\r\n            c,-s, _,\r\n            s, c, _,\r\n            _, _, 1,\r\n        ]);\r\n    }\r\n\r\n    public.apply = function (gl, uniform) {\r\n        if (uniform !== undefined) {\r\n            gl.uniformMatrix3fv(uniform, false, public.getMatrix());\r\n        }\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","window.frag.AssetCatalog = function (shader, defaultTextures) {\r\n    const frag = window.frag;\r\n\r\n    const defaultTexturePixels = new Uint8Array([\r\n        0x7F, 0x7F, 0x7F, 0xFF, // Opaque medium grey\r\n        0x00, 0x00, 0xFF, 0x00, // Very shinny\r\n        0x00, 0x00, 0x00,       // No light emmission\r\n        0x7F, 0x7F, 0xFF]);     // Normal (0, 0, 1)\r\n    \r\n    if (!defaultTextures) defaultTextures = {};\r\n    if (!defaultTextures.diffuse) defaultTextures.diffuse = frag.Texture()\r\n        .name(\"default-diffuse-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 0, 1, 1);\r\n    if (!defaultTextures.surface) defaultTextures.surface = frag.Texture()\r\n        .name(\"default-surface-texture\")\r\n        .dataFormat(frag.gl.RGBA)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 4, 1, 1);\r\n    if (!defaultTextures.emmissive) defaultTextures.emmissive = frag.Texture()\r\n        .name(\"default-emmissive-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 8, 1, 1);\r\n    if (!defaultTextures.normal) defaultTextures.normal = frag.Texture()\r\n        .name(\"default-normal-map-texture\")\r\n        .dataFormat(frag.gl.RGB)\r\n        .fromArrayBuffer(0, defaultTexturePixels.buffer, 11, 1, 1);\r\n\r\n    if (!shader) {\r\n        shader = frag.Shader()\r\n            .name(\"Model\")\r\n            .verticiesXYZ()\r\n            .matrix3D()\r\n            .diffuseTexture()\r\n            .directionalLightGrey()\r\n            .compile();\r\n    };\r\n\r\n    const private = {\r\n        defaultTextures,\r\n        materials: {},\r\n        models: {},\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        shader\r\n    };\r\n\r\n    public.getMaterial = function(name) {\r\n        var material = private.materials[name];\r\n        if (!material) {\r\n            material = frag.Material()\r\n                .name(name)\r\n                .disposeTextures(false)\r\n                .setTexture(\"diffuse\", private.defaultTextures.diffuse)\r\n                .setTexture(\"emmissive\", private.defaultTextures.emmissive)\r\n                .setTexture(\"surface\", private.defaultTextures.surface)\r\n                .setTexture(\"normalMap\", private.defaultTextures.normal);\r\n            private.materials[name] = material;\r\n        }\r\n        return material;\r\n    }\r\n\r\n    public.getModel = function (name, isChild) {\r\n        var model = isChild ? undefined : private.models[name];\r\n        if (!model) {\r\n            model = frag.Model(public.shader.is3d)\r\n                .name(name)\r\n                .shader(public.shader);\r\n            if (!isChild) private.models[name] = model;\r\n        }\r\n        return model;\r\n    }\r\n\r\n    return public;\r\n}\r\n","﻿window.frag.MaterialLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMipV1 = function (header, headerOffset, data, dataOffset, material, mipLevel, width, height) {\r\n        const flags = header.getUint8(headerOffset++);\r\n\r\n        const colorDataOffset = header.getUint32(headerOffset, littleEndian);\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Color data at \" + colorDataOffset);\r\n        headerOffset += 4;\r\n\r\n        const colorTexture = frag.Texture()\r\n            .dataFormat((flags & 1) === 1 ? frag.gl.RGBA : frag.gl.RGB)\r\n            .fromArrayBuffer(mipLevel, data, dataOffset + colorDataOffset, width, height);\r\n        material.setTexture(\"diffuse\", colorTexture);\r\n\r\n        if ((flags & 2) === 2) {\r\n            const surfaceDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Surface data at \" + surfaceDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const surfaceTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + surfaceDataOffset, width, height);\r\n            material.setTexture(\"surface\", surfaceTexture);\r\n        }\r\n\r\n        if ((flags & 4) === 4) {\r\n            const normalMapDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Normal map at \" + normalMapDataOffset);\r\n            headerOffset += 4;\r\n\r\n            const normalMap = frag.Texture()\r\n                .dataFormat(frag.gl.RGB)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + normalMapDataOffset, width, height);\r\n            material.setTexture(\"normalMap\", normalMap);\r\n        }\r\n\r\n        if ((flags & 8) === 8) {\r\n            const pbrDataOffset = header.getUint32(headerOffset, littleEndian);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"PBR data at \" + pbrDataOffset);\r\n            headerOffset += 4;\r\n            const pbrTexture = frag.Texture()\r\n                .dataFormat(frag.gl.RGBA)\r\n                .fromArrayBuffer(mipLevel, data, dataOffset + pbrDataOffset, width, height);\r\n            material.setTexture(\"pbr\", pbrTexture);\r\n        }\r\n\r\n        return headerOffset;\r\n    }\r\n\r\n    private.loadMaterialV1 = function (materialStore, header, headerOffset, data, dataOffset) {\r\n        const nameLength = header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(header.getUint8(headerOffset++));\r\n        }\r\n        const material = materialStore.getMaterial(name);\r\n        if (frag.debugMaterialLoader) {\r\n            console.log(\"\");\r\n            console.log(\"Loading \" + name + \" material textures\");\r\n        }\r\n\r\n        const maxMip = header.getUint8(headerOffset++);\r\n\r\n        var width = 1 << maxMip;\r\n        var height = width;\r\n        var nextMip = 0;\r\n        var mip;\r\n\r\n        do {\r\n            mip = header.getUint8(headerOffset++);\r\n            if (frag.debugMaterialLoader)\r\n                console.log(\"Loading MIP level \" + mip + \" at \" + width + \" x \" + height + \" pixels\");\r\n\r\n            if (mip !== nextMip)\r\n                console.error(\"Mip levels are wrong for \" + name + \" texture\");\r\n\r\n            headerOffset = private.loadMipV1(header, headerOffset, data, dataOffset, material, mip, width, height);\r\n\r\n            nextMip++;\r\n            width >>>= 1;\r\n            height >>>= 1;\r\n        }\r\n        while (mip !== 0)\r\n    }\r\n\r\n\r\n    public.loadMaterialsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint16(2, littleEndian);\r\n        var headerOffset = 4;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugMaterialLoader)\r\n            console.log(\"Material pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        if (version === 1) {\r\n            var textureSize = header.getUint16(headerOffset, littleEndian);\r\n            while (textureSize !== 0) {\r\n                private.loadMaterialV1(materialStore, header, headerOffset + 2, buffer, dataOffset);\r\n                headerOffset += textureSize;\r\n                textureSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" texture packs are not supported\");\r\n        }\r\n        return assetCatalog;\r\n    };\r\n\r\n    public.loadMaterialsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadMaterialsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog);\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.ModelLoader = (function () {\r\n    const frag = window.frag;\r\n\r\n    const uInt32 = new Uint32Array([0x11223344]);\r\n    const uInt8 = new Uint8Array(uInt32.buffer);\r\n    const littleEndian = uInt8[0] === 0x44;\r\n\r\n    const round4 = function(n) { return Math.round(n * 10000) / 10000; }\r\n\r\n    const private = {\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        littleEndian\r\n    };\r\n\r\n    private.loadMaterialV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n        const material = context.assetCatalog.getMaterial(name);\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is material \" + name);\r\n        return material;\r\n    }\r\n\r\n    private.loadMeshV1 = function (context, objectIndex, headerOffset) {\r\n        const mesh = frag.MeshData();\r\n        const fragmentCount = context.header.getUint16(headerOffset, littleEndian);\r\n        headerOffset += 2;\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Object[\" + objectIndex + \"] is a mesh with \" + fragmentCount + \" fragments\");\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < fragmentCount; fragmentIndex++) {\r\n            const vertexFormat = context.header.getUint8(headerOffset);\r\n            const dataFlags = context.header.getUint8(headerOffset + 1);\r\n            const normalFormat = context.header.getUint8(headerOffset + 2);\r\n            const tangentFormat = context.header.getUint8(headerOffset + 3);\r\n            const bitangentFormat = context.header.getUint8(headerOffset + 4);\r\n            const uvFormat = context.header.getUint8(headerOffset + 5);\r\n            const colorFormat = context.header.getUint8(headerOffset + 6);\r\n            const meshVertexCount = context.header.getUint32(headerOffset + 7, littleEndian);\r\n            const indexVertexCount = context.header.getUint32(headerOffset + 11, littleEndian);\r\n            let dataOffset = context.header.getUint32(headerOffset + 15, littleEndian) + context.dataOffset;\r\n            headerOffset += 19;\r\n\r\n            const isIndexed = (dataFlags & 0x01) === 0x01;\r\n            const is3D = (dataFlags & 0x02) === 0x02;\r\n\r\n            let triangleCount = 0;\r\n            if (vertexFormat === 1) {\r\n                triangleCount = meshVertexCount / 3;\r\n            }\r\n            else if (vertexFormat === 2) {\r\n                triangleCount = meshVertexCount / 2;\r\n            }\r\n            else if (vertexFormat === 3) {\r\n                triangleCount = meshVertexCount - 2;\r\n            }\r\n            else if (vertexFormat === 4) {\r\n                triangleCount = meshVertexCount - 2;\r\n            };\r\n\r\n            if (frag.debugModelLoader) {\r\n                let msg = \"  fragment[\" + fragmentIndex + \"] has \" + meshVertexCount + \" verticies forming \";\r\n                if (vertexFormat === 1) {\r\n                    msg += triangleCount + \" triangles\"\r\n                }\r\n                else if (vertexFormat === 2) {\r\n                    msg += (triangleCount / 2) + \" rectangles\"\r\n                }\r\n                else if (vertexFormat === 3) {\r\n                    msg += \"a strip of \" + triangleCount + \"triangles\"\r\n                }\r\n                else if (vertexFormat === 4) {\r\n                    msg += \"a fan of \" + triangleCount + \" triangles\"\r\n                };\r\n\r\n                if (isIndexed) msg += \" indexed\";\r\n                if (!is3D) msg += \" in 2D\";\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        msg += \" with custom normals\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed normals\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle normals\";\r\n                        break;\r\n                }\r\n\r\n                switch (tangentFormat) {\r\n                    case 1:\r\n                        msg += \" with custom tangents\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed tangents\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle tangents\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with single tangent\";\r\n                        break;\r\n                }\r\n\r\n                switch (bitangentFormat) {\r\n                    case 1:\r\n                        msg += \" with bitangents\";\r\n                        break;\r\n                }\r\n\r\n                switch (uvFormat) {\r\n                    case 1:\r\n                        msg += \" with custom uvs\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with indexed uvs\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with triangle uvs\";\r\n                        break;\r\n                }\r\n\r\n                switch (colorFormat) {\r\n                    case 1:\r\n                        msg += \" with custom colors\";\r\n                        break;\r\n                    case 2:\r\n                        msg += \" with custom colors and transparency\";\r\n                        break;\r\n                    case 3:\r\n                        msg += \" with indexed colors\";\r\n                        break;\r\n                    case 4:\r\n                        msg += \" with indexed colors and transparency\";\r\n                        break;\r\n                }\r\n\r\n                console.log(msg);\r\n            }\r\n\r\n            const index = isIndexed ? [] : undefined;\r\n            if (isIndexed) {\r\n                indexArray = new Int16Array(context.data, dataOffset);\r\n                for (let i = 0; i < meshVertexCount; i++) {\r\n                    index.push(indexArray[i]);\r\n                }\r\n                dataOffset += 2 * meshVertexCount;\r\n                if ((meshVertexCount & 1) == 1) dataOffset += 2;\r\n            }\r\n\r\n            const verticies = [];\r\n            const normals = normalFormat === 0 ? undefined : [];\r\n            const tangents = tangentFormat === 0 ? undefined : [];\r\n            const bitangents = bitangentFormat === 0 ? undefined : [];\r\n            const uvs = uvFormat === 0 ? undefined : [];\r\n            const colors = undefined;\r\n\r\n            const dataArray = new Float32Array(context.data, dataOffset);\r\n\r\n            for (let vertexOffset = 0; vertexOffset < meshVertexCount; vertexOffset++) {\r\n                let indexOffset = isIndexed ? index[vertexOffset] : vertexOffset;\r\n\r\n                let triangleOffset = Math.trunc(vertexOffset / 3);\r\n                if (vertexFormat === 2) {\r\n                    triangleOffset = Math.trunc(vertexOffset / 4);\r\n                }\r\n                else if (vertexFormat === 3 || vertexFormat === 4) {\r\n                    if (vertexOffset < 3) triangleOffset = 0;\r\n                    else triangleOffset = vertexOffset - 2;\r\n                }\r\n\r\n                let sectionDataIndex = 0;\r\n                let vertexDataIndex = is3D ? indexOffset * 3 : indexOffset * 2;\r\n\r\n                verticies.push(dataArray[vertexDataIndex]); // X\r\n                verticies.push(dataArray[vertexDataIndex + 1]); // Y\r\n                if (is3D) {\r\n                    verticies.push(dataArray[vertexDataIndex + 2]); // Z\r\n                    sectionDataIndex += indexVertexCount * 3;\r\n                } else {\r\n                    sectionDataIndex += indexVertexCount * 2;\r\n                }\r\n\r\n                switch (normalFormat) {\r\n                    case 1:\r\n                        vertexDataIndex = sectionDataIndex + vertexOffset * 3;\r\n                        sectionDataIndex += meshVertexCount * 3;\r\n                        break;\r\n                    case 2:\r\n                        vertexDataIndex = sectionDataIndex + indexOffset * 3;\r\n                        sectionDataIndex += indexVertexCount * 3;\r\n                        break;\r\n                    case 3:\r\n                        vertexDataIndex = sectionDataIndex + triangleOffset * 3;\r\n                        sectionDataIndex += triangleCount * 3;\r\n                        break;\r\n                }\r\n                if (normalFormat !== 0) {\r\n                    normals.push(dataArray[vertexDataIndex]); // X\r\n                    normals.push(dataArray[vertexDataIndex + 1]); // Y\r\n                    normals.push(dataArray[vertexDataIndex + 2]); // Z\r\n                }\r\n\r\n                //if (hasTangents) {\r\n                //    tangents.push(dataArray[vertexDataIndex]); // X\r\n                //    tangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    tangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasBitangents) {\r\n                //    bitangents.push(dataArray[vertexDataIndex]); // X\r\n                //    bitangents.push(dataArray[vertexDataIndex + 1]); // Y\r\n                //    bitangents.push(dataArray[vertexDataIndex + 2]); // Z\r\n                //    vertexDataIndex += indexVertexCount * 3;\r\n                //}\r\n\r\n                //if (hasUvs) {\r\n                //    uvs.push(dataArray[vertexDataIndex]); // U\r\n                //    uvs.push(dataArray[vertexDataIndex + 1]); // V\r\n                //    vertexDataIndex += indexVertexCount * 2;\r\n                //}\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugMeshes) {\r\n                let msg = \"  vertices[\";\r\n                for (var i = 0; i < verticies.length; i++) {\r\n                    if (i > 0) msg += ', ';\r\n                    msg += round4(verticies[i]);\r\n                }\r\n                msg += \"]\";\r\n                console.log(msg);\r\n            }\r\n\r\n            const vertexData = frag.VertexData();\r\n            if (vertexFormat === 1 || vertexFormat === 2) {\r\n                if (is3D)\r\n                    vertexData.setTriangles(verticies, colors, uvs, normals, tangents, bitangents)\r\n                else\r\n                    vertexData.setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n            }\r\n            else if (vertexFormat === 3) vertexData.setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n            else if (vertexFormat === 4) vertexData.setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n\r\n            mesh.addVertexData(vertexData);\r\n        }\r\n\r\n        return mesh;\r\n    }\r\n\r\n    private.loadAnimationV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const flags = context.header.getUint8(headerOffset);\r\n        const frames = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const interval = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        const channelCount = context.header.getUint8(headerOffset + 5);\r\n        headerOffset += 6;\r\n\r\n        const loop = (flags & 0x1) === 0x1;\r\n        const reverse = (flags & 0x2) === 0x2;\r\n\r\n        if (frag.debugModelLoader) {\r\n            let msg = \"Object[\" + objectIndex + \"] is '\" + name + \"' animation which runs for \" + frames + \"x\" + interval + \" ms\";\r\n            if (loop) msg += \". Repeats until stopped\";\r\n            if (reverse) msg += \". Plays in reverse after playing forwards\";\r\n            console.log(msg);\r\n        }\r\n\r\n        const modelAnimation = frag.ModelAnimation()\r\n            .name(name)\r\n            .loop(loop)\r\n            .frames(frames)\r\n            .interval(interval / window.frag.gameTickMs);\r\n\r\n        for (let i = 0; i < channelCount; i++) {\r\n            const patternLength = context.header.getUint8(headerOffset++);\r\n            var pattern = \"\";\r\n            for (let i = 0; i < patternLength; i++) {\r\n                pattern += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            const channelNameLength = context.header.getUint8(headerOffset++);\r\n            var channelName = \"\";\r\n            for (let i = 0; i < channelNameLength; i++) {\r\n                channelName += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n            }\r\n\r\n            if (frag.debugModelLoader && frag.debugAnimations) {\r\n                msg = \"  Channel \" + channelName + \" applies to \" + pattern + \" children\"\r\n                console.log(msg);\r\n            }\r\n\r\n            const keyframes = {};\r\n            const keyframeCount = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n\r\n            for (let j = 0; j < keyframeCount; j++) {\r\n                const frame = context.header.getUint16(headerOffset, littleEndian);\r\n                const transitionEnum = context.header.getUint8(headerOffset + 2);\r\n                const value = context.header.getFloat32(headerOffset + 3, littleEndian);\r\n                headerOffset += 7;\r\n\r\n                var transition = \"step\";\r\n                if (transitionEnum === 1) transition = \"linear\";\r\n                else if (transitionEnum === 2) transition = \"spline\";\r\n                keyframes[frame] = { value, transition };\r\n\r\n                if (frag.debugModelLoader && frag.debugAnimations) {\r\n                    msg = \"    Keyframe[\" + frame + \"] = \" + round4(value) + \" \" + transition;\r\n                    console.log(msg);\r\n                }\r\n            }\r\n\r\n            modelAnimation.addChannel({\r\n                channel: channelName,\r\n                pattern: new RegExp(pattern, \"i\"),\r\n                keyframes: keyframes\r\n            });\r\n        }\r\n\r\n        return modelAnimation;\r\n    }\r\n\r\n    private.loadModelV1 = function (context, objectIndex, headerOffset) {\r\n        const nameLength = context.header.getUint8(headerOffset++);\r\n        var name = \"\";\r\n        for (let i = 0; i < nameLength; i++) {\r\n            name += String.fromCharCode(context.header.getUint8(headerOffset++));\r\n        }\r\n\r\n        const modelFlags = context.header.getUint8(headerOffset);\r\n        const materialIndex = context.header.getUint16(headerOffset + 1, littleEndian);\r\n        const meshIndex = context.header.getUint16(headerOffset + 3, littleEndian);\r\n        headerOffset += 5;\r\n\r\n        const location = frag.Location(true); // Loaded models are always 3D\r\n        location.translateX = context.header.getFloat32(headerOffset + 0, littleEndian);\r\n        location.translateY = context.header.getFloat32(headerOffset + 4, littleEndian);\r\n        location.translateZ = context.header.getFloat32(headerOffset + 8, littleEndian);\r\n        location.rotateX = context.header.getFloat32(headerOffset + 12, littleEndian);\r\n        location.rotateY = context.header.getFloat32(headerOffset + 16, littleEndian);\r\n        location.rotateZ = context.header.getFloat32(headerOffset + 20, littleEndian);\r\n        location.scaleX = context.header.getFloat32(headerOffset + 24, littleEndian);\r\n        location.scaleY = context.header.getFloat32(headerOffset + 28, littleEndian);\r\n        location.scaleZ = context.header.getFloat32(headerOffset + 32, littleEndian);\r\n        location.isModified = true;\r\n        headerOffset += 36;\r\n\r\n        const childCount = context.header.getUint16(headerOffset, littleEndian);\r\n        const animationCount = context.header.getUint16(headerOffset + 2, littleEndian);\r\n        headerOffset += 4;\r\n\r\n        const isRoot = (modelFlags & 1) === 1;\r\n        const hasMaterial = (modelFlags & 2) === 2;\r\n        const hasMesh = (modelFlags & 4) === 4;\r\n\r\n        if (frag.debugModelLoader) {\r\n            console.log(\"Object[\" + objectIndex + \"] is \" + \r\n                (isRoot ? \"root \" : \"\") + \"model \" + name + \" with \" + childCount + \" children and \" + animationCount + \" animations.\" + \r\n                (hasMesh ? \" Paint mesh \" + meshIndex : \" No mesh\") + (hasMaterial ? \" with material \" + materialIndex : \". No material\"));\r\n            console.log(\"Object[\" + objectIndex + \"] at (\" + \r\n                round4(location.translateX) + \",\" + round4(location.translateY) + \",\" + round4(location.translateZ) +\").[\"+ \r\n                round4(location.rotateX) + \",\" + round4(location.rotateY) + \",\" + round4(location.rotateZ) + \"]x(\" + \r\n                round4(location.scaleX) + \",\" + round4(location.scaleY) + \",\" + round4(location.scaleZ) + \")\");\r\n        }\r\n\r\n        const model = context.assetCatalog.getModel(name, !isRoot);\r\n        model.location = location;\r\n\r\n        if (hasMaterial) model.material(context.materials[materialIndex]);\r\n        if (hasMesh) model.mesh(context.meshes[meshIndex]);\r\n\r\n        for (let i = 0; i < childCount; i++) {\r\n            const modelIndex = context.header.getUint16(headerOffset, littleEndian);\r\n            headerOffset += 2;\r\n            model.addChild(context.models[modelIndex]);\r\n        }\r\n\r\n        if (isRoot) {\r\n            if (frag.debugAnimations && animationCount > 0)\r\n                console.log(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations\");\r\n            for (let i = 0; i < animationCount; i++) {\r\n                const animationIndex = context.header.getUint16(headerOffset, littleEndian);\r\n                headerOffset += 2;\r\n\r\n                const animation = context.animations[animationIndex];\r\n                if (frag.debugAnimations) {\r\n                    const channels = animation.getChannelGraphs();\r\n                    console.log(\"  Animation '\" + animation.getName() + \"' has \" + channels.length + \" channels.\" + (animation.__private.loop ? \" Loop \" : \"\") + animation.__private.frames + \"x\" + animation.__private.interval + \" frames\");\r\n                    for (let channelIndex = 0; channelIndex < channels.length; channelIndex++) {\r\n                        console.log(\"    Animates \" + channels[channelIndex].channel + \" for children matching \" + channels[channelIndex].pattern);\r\n                    }\r\n                }\r\n                model.addAnimation(animation);\r\n            }\r\n        } else {\r\n            if (animationCount > 0) console.warn(\"Model #\" + objectIndex + \" '\" + name + \"' has \" + animationCount + \" animations but is not a root\");\r\n        }\r\n\r\n        return model;\r\n    };\r\n\r\n    public.loadModelsFromBuffer = function(buffer, assetCatalog){\r\n        if (!assetCatalog) assetCatalog = frag.AssetCatalog();\r\n\r\n        const bytes = new Uint8Array(buffer);\r\n        const header = new DataView(buffer, 0, bytes.length);\r\n\r\n        const version = bytes[0];\r\n        const headerLength = header.getUint32(4, littleEndian);\r\n        var headerOffset = 8;\r\n        const dataOffset = headerOffset + headerLength;\r\n\r\n        if (frag.debugModelLoader)\r\n            console.log(\"Model pack V\" + version + \" is \" + bytes.length + \" bytes with \" + headerLength + \" header bytes\");\r\n\r\n        const context = {\r\n            assetCatalog,\r\n            header,\r\n            data: buffer,\r\n            dataOffset,\r\n            materials: {},\r\n            meshes: {},\r\n            animations: {},\r\n            models: {}\r\n        };\r\n\r\n        if (version === 1) {\r\n            var objectSize = header.getUint16(headerOffset, littleEndian);\r\n            var expectedObjectIndex = 0;\r\n            while (objectSize !== 0) {\r\n                const objectIndex = header.getUint16(headerOffset + 2, littleEndian);\r\n                const objectType = header.getUint8(headerOffset + 4);\r\n                const objectOffset = headerOffset + 5;\r\n\r\n                if (objectIndex !== expectedObjectIndex++) {\r\n                    console.error(\"Object indexes are not consecutive\");\r\n                    return;\r\n                }\r\n\r\n                if (objectType === 0) break;\r\n\r\n                if (objectType === 1) {\r\n                    context.materials[objectIndex] = private.loadMaterialV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 2) {\r\n                    context.meshes[objectIndex] = private.loadMeshV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 3) {\r\n                    context.animations[objectIndex] = private.loadAnimationV1(context, objectIndex, objectOffset);\r\n                }\r\n                else if (objectType === 4) {\r\n                    context.models[objectIndex] = private.loadModelV1(context, objectIndex, objectOffset);\r\n                }\r\n                else console.error(\"Unknown object type \" + objectType);\r\n\r\n                headerOffset += objectSize;\r\n                objectSize = header.getUint16(headerOffset, littleEndian);\r\n            }\r\n        } else {\r\n            console.error(\"Version \" + version + \" model packs are not supported\");\r\n        }\r\n        return assetCatalog\r\n    };\r\n\r\n    public.loadModelsFromUrl = function (url, assetCatalog, onload) {\r\n        var xhttp = new XMLHttpRequest();\r\n        xhttp.responseType = \"arraybuffer\";\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                assetCatalog = public.loadModelsFromBuffer(this.response, assetCatalog);\r\n                if (onload) onload(assetCatalog)\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", url, true);\r\n        xhttp.send();\r\n    };\r\n\r\n\r\n    return public;\r\n})();\r\n","﻿window.frag.Material = function () {\r\n    const private = {\r\n        textures: {},\r\n        disposeTextures: false\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.disposeTextures) {\r\n            for (let textureType in private.textures) {\r\n                const texture = private.textures[textureType];\r\n                if (texture) texture.dispose();\r\n            }\r\n        }\r\n        private.textures = {};\r\n    };\r\n\r\n    public.disposeTextures = function (shouldDispose) {\r\n        private.disposeTextures = shouldDispose;\r\n        return public;\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    };\r\n\r\n    // The name of the texture type must match the name of a uniform on the shader\r\n    public.setTexture = function (textureType, texture) {\r\n        if (private.disposeTextures) {\r\n            const currentTexture = private.textures[textureType];\r\n            if (currentTexture) currentTexture.dispose();\r\n        }\r\n        private.textures[textureType] = texture;\r\n        return public;\r\n    }\r\n\r\n    public.apply = function (gl, shader) {\r\n        for (let textureType in private.textures) {\r\n            const texture = private.textures[textureType];\r\n            if (texture) texture.apply(textureType, gl, shader);\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Texture = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glTexture: null,\r\n        generated: false,\r\n        internalFormat: gl.RGBA,\r\n        format: gl.RGBA,\r\n        dataType: gl.UNSIGNED_BYTE,\r\n        valuesPerPixel: 4\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        textureUnit: window.frag.allocateTextureUnit()\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glTexture) {\r\n            gl.deleteTexture(private.glTexture);\r\n            private.glTexture = null;\r\n            private.disposed = true;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.dataFormat = function (format) {\r\n        private.internalFormat = format;\r\n        private.format = format;\r\n\r\n        if (format === gl.RGBA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 4;\r\n        }\r\n        else if (format === gl.RGB) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 3;\r\n        }\r\n        else if (format === gl.LUMINANCE_ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 2;\r\n        }\r\n        else if (format === gl.LUMINANCE || formaat === gl.ALPHA) {\r\n            private.dataType = gl.UNSIGNED_BYTE;\r\n            private.valuesPerPixel = 1;\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    private.setup = function (width, height) {\r\n        private.width = width;\r\n        private.height = height;\r\n\r\n        if (!private.glTexture)\r\n            private.glTexture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if ((width & (width - 1)) !== 0 || (height & (height - 1)) !== 0) {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n    }\r\n\r\n    public.fromArrayBuffer = function (level, buffer, offset, width, height) {\r\n        let bufferView;\r\n        if (private.dataType === gl.UNSIGNED_BYTE)\r\n            bufferView = new Uint8Array(buffer, offset, width * height * private.valuesPerPixel);\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, bufferView);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromImage = function (level, image) {\r\n        const load = function() {\r\n            private.setup(image.width, image.height);\r\n            gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, private.format, private.dataType, image);\r\n        }\r\n        if (image.onload)\r\n            load();\r\n        else\r\n            image.onload = load;\r\n        return public;\r\n    }\r\n\r\n    public.fromUrl = function (level, url, crossOrigin) {\r\n        const image = new Image();\r\n        public.fromImage(level, image);\r\n        if (crossOrigin !== undefined)\r\n            image.crossOrigin = crossOrigin;\r\n        image.src = url;\r\n        return public;\r\n    }\r\n\r\n    public.update = function (width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n\r\n        if (private.scene) {\r\n            if (width !== undefined && height !== undefined) {\r\n                if (width !== private.width || height !== private.height) {\r\n                    public.fromScene(private.scene, width, height);\r\n                }\r\n            }\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n            gl.viewport(0, 0, private.width, private.height);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            private.scene.adjustToViewport(gl);\r\n            private.scene.draw(gl);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    public.fromScene = function (scene, width, height) {\r\n        const frag = window.frag;\r\n        const gl = frag.gl;\r\n        const level = 0;\r\n\r\n        private.setup(width, height);\r\n        gl.texImage2D(gl.TEXTURE_2D, level, private.internalFormat, width, height, 0, private.format, private.dataType, null);\r\n\r\n        private.scene = scene;\r\n        private.frameBuffer = gl.createFramebuffer();\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, private.frameBuffer);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, private.glTexture, level);\r\n\r\n        private.depthBuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, private.depthBuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, private.depthBuffer);\r\n\r\n        return public.update(width, height);\r\n    }\r\n\r\n    public.apply = function (textureType, gl, shader) {\r\n        if (!shader.uniforms[textureType]) return public;\r\n        if (!private.glTexture) return public;\r\n        \r\n        gl.activeTexture(gl.TEXTURE0 + public.textureUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, private.glTexture);\r\n\r\n        if (!private.generated) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            private.generated = true;\r\n        }\r\n\r\n        gl.uniform1i(shader.uniforms[textureType], public.textureUnit);\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Matrix = {\r\n    m3Identity: function () {\r\n        return [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m3Invert: function (a) {\r\n        return a; // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n    },\r\n\r\n    m3Transpose: function (a) {\r\n        return [\r\n            a[0], a[3], a[6],\r\n            a[1], a[4], a[7],\r\n            a[2], a[5], a[8],\r\n        ];\r\n    },\r\n\r\n    m3Xm3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b00 = b[0 * 3 + 0];\r\n        const b01 = b[0 * 3 + 1];\r\n        const b02 = b[0 * 3 + 2];\r\n        const b10 = b[1 * 3 + 0];\r\n        const b11 = b[1 * 3 + 1];\r\n        const b12 = b[1 * 3 + 2];\r\n        const b20 = b[2 * 3 + 0];\r\n        const b21 = b[2 * 3 + 1];\r\n        const b22 = b[2 * 3 + 2];\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20,\r\n            b00 * a01 + b01 * a11 + b02 * a21,\r\n            b00 * a02 + b01 * a12 + b02 * a22,\r\n            b10 * a00 + b11 * a10 + b12 * a20,\r\n            b10 * a01 + b11 * a11 + b12 * a21,\r\n            b10 * a02 + b11 * a12 + b12 * a22,\r\n            b20 * a00 + b21 * a10 + b22 * a20,\r\n            b20 * a01 + b21 * a11 + b22 * a21,\r\n            b20 * a02 + b21 * a12 + b22 * a22,\r\n        ];\r\n    },\r\n\r\n    m3Xv3: function (a, b) {\r\n        const a00 = a[0 * 3 + 0];\r\n        const a01 = a[0 * 3 + 1];\r\n        const a02 = a[0 * 3 + 2];\r\n        const a10 = a[1 * 3 + 0];\r\n        const a11 = a[1 * 3 + 1];\r\n        const a12 = a[1 * 3 + 2];\r\n        const a20 = a[2 * 3 + 0];\r\n        const a21 = a[2 * 3 + 1];\r\n        const a22 = a[2 * 3 + 2];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n\r\n        return [\r\n            b0 * a00 + b1 * a10 + b2 * a20,\r\n            b0 * a01 + b1 * a11 + b2 * a21,\r\n            b0 * a02 + b1 * a12 + b2 * a22,\r\n        ];\r\n    },\r\n\r\n    m4Identity: function () {\r\n        return [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        ];\r\n    },\r\n\r\n    m4Invert: function (a) {\r\n        // TODO: http://blog.acipo.com/matrix-inversion-in-javascript/\r\n        return [\r\n            a[0], a[4], a[8],\r\n            a[1], a[5], a[9],\r\n            a[2], a[6], a[10],\r\n            a[3], a[7], a[11],\r\n        ];\r\n    },\r\n\r\n    m4Transpose: function (a) {\r\n        return [\r\n            a[0], a[4], a[8], a[12],\r\n            a[1], a[5], a[9], a[13],\r\n            a[2], a[6], a[10], a[14],\r\n            a[3], a[7], a[11], a[15],\r\n        ];\r\n    },\r\n\r\n    m4Xm4: function (a, b) {\r\n        const a00 = a[0 * 4 + 0];\r\n        const a01 = a[0 * 4 + 1];\r\n        const a02 = a[0 * 4 + 2];\r\n        const a03 = a[0 * 4 + 3];\r\n        const a10 = a[1 * 4 + 0];\r\n        const a11 = a[1 * 4 + 1];\r\n        const a12 = a[1 * 4 + 2];\r\n        const a13 = a[1 * 4 + 3];\r\n        const a20 = a[2 * 4 + 0];\r\n        const a21 = a[2 * 4 + 1];\r\n        const a22 = a[2 * 4 + 2];\r\n        const a23 = a[2 * 4 + 3];\r\n        const a30 = a[3 * 4 + 0];\r\n        const a31 = a[3 * 4 + 1];\r\n        const a32 = a[3 * 4 + 2];\r\n        const a33 = a[3 * 4 + 3];\r\n\r\n        const b00 = b[0 * 4 + 0];\r\n        const b01 = b[0 * 4 + 1];\r\n        const b02 = b[0 * 4 + 2];\r\n        const b03 = b[0 * 4 + 3];\r\n        const b10 = b[1 * 4 + 0];\r\n        const b11 = b[1 * 4 + 1];\r\n        const b12 = b[1 * 4 + 2];\r\n        const b13 = b[1 * 4 + 3];\r\n        const b20 = b[2 * 4 + 0];\r\n        const b21 = b[2 * 4 + 1];\r\n        const b22 = b[2 * 4 + 2];\r\n        const b23 = b[2 * 4 + 3];\r\n        const b30 = b[3 * 4 + 0];\r\n        const b31 = b[3 * 4 + 1];\r\n        const b32 = b[3 * 4 + 2];\r\n        const b33 = b[3 * 4 + 3];\r\n\r\n        return [\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n        ];\r\n    },\r\n\r\n    m4Xv4: function (a, b) {\r\n        const c0r0 = a[0];\r\n        const c0r1 = a[1];\r\n        const c0r2 = a[2];\r\n        const c0r3 = a[3];\r\n        const c1r0 = a[4];\r\n        const c1r1 = a[5];\r\n        const c1r2 = a[6];\r\n        const c1r3 = a[7];\r\n        const c2r0 = a[8];\r\n        const c2r1 = a[9];\r\n        const c2r2 = a[10];\r\n        const c2r3 = a[11];\r\n        const c3r0 = a[12];\r\n        const c3r1 = a[13];\r\n        const c3r2 = a[14];\r\n        const c3r3 = a[15];\r\n\r\n        const b0 = b[0];\r\n        const b1 = b[1];\r\n        const b2 = b[2];\r\n        const b3 = b[3];\r\n\r\n        return [\r\n            b0 * c0r0 + b1 * c1r0 + b2 * c2r0 + b3 * c3r0,\r\n            b0 * c0r1 + b1 * c1r1 + b2 * c2r1 + b3 * c3r1,\r\n            b0 * c0r2 + b1 * c1r2 + b2 * c2r2 + b3 * c3r2,\r\n            b0 * c0r3 + b1 * c1r3 + b2 * c2r3 + b3 * c3r3,\r\n        ];\r\n    },\r\n}\r\n/*\r\n// Unit tests framework\r\n\r\nwindow.tests = window.tests || {};\r\n\r\nwindow.tests.expectArray = function (name, expected, actual) {\r\n    if (actual.length !== expected.length) console.log('Test ' + name + ' wrong length array');\r\n    for (let i = 0; i < expected.length; i++) {\r\n        if (Math.abs(expected[i] - actual[i]) > 0.001)\r\n            console.log('Test ' + name + ' index ' + i + ' was ' + actual[i] + ' expecting ' + expected[i]);\r\n    }\r\n}\r\n\r\n// Unit tests for matrix\r\n\r\nwindow.tests.matrix = {\r\n    t1: window.frag.Matrix.m4Transpose([\r\n         1,  2,  3,  4,\r\n         5,  6,  7,  8,\r\n         9, 10, 11, 12,\r\n        13, 14, 15, 16,\r\n    ]),\r\n\r\n    run: function (test) {\r\n        window.tests.expectArray(\"Transpose matrix\", test.t1, [\r\n            1, 5,  9, 13,\r\n            2, 6, 10, 14,\r\n            3, 7, 11, 15,\r\n            4, 8, 12, 16,\r\n        ]);\r\n    }\r\n}\r\n\r\nwindow.tests.matrix.run(window.tests.matrix);\r\n*/","﻿window.frag = window.frag || {};\r\nwindow.frag.Triangle = {\r\n    makeTriangleFromVectors: function (a, b, c) {\r\n        return { a, b, c };\r\n    },\r\n\r\n    makeTriangleFromArray2D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1]],\r\n            b: [array[offsetB], array[offsetB + 1]],\r\n            c: [array[offsetC], array[offsetC + 1]],\r\n        };\r\n    },\r\n\r\n    makeTriangleFromArray3D: function (array, offsetA, offsetB, offsetC) {\r\n        if (!array) return null;\r\n        return {\r\n            a: [array[offsetA], array[offsetA + 1], array[offsetA + 2]],\r\n            b: [array[offsetB], array[offsetB + 1], array[offsetB + 2]],\r\n            c: [array[offsetC], array[offsetC + 1], array[offsetC + 2]],\r\n        };\r\n    },\r\n\r\n    normal: function (triangle) {\r\n        const Vector = window.frag.Vector;\r\n        const v1 = Vector.sub(triangle.a, triangle.b);\r\n        const v2 = Vector.sub(triangle.c, triangle.b);\r\n        return Vector.normalize(Vector.cross(v1, v2));\r\n    },\r\n}\r\n","﻿window.frag = window.frag || {};\r\nwindow.frag.Vector = {\r\n    extract2D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1]];\r\n    },\r\n    extract3D: function (array, offset) {\r\n        if (!array) return null;\r\n        return [array[offset], array[offset + 1], array[offset + 2]];\r\n    },\r\n    zero: function (dimensions) {\r\n        const vector = [0, 0, 0, 0, 0];\r\n        vector.length = dimensions;\r\n        return vector;\r\n    },\r\n    add: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] + b);\r\n        return result;\r\n    },\r\n    sub: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] - b);\r\n        return result;\r\n    },\r\n    mult: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] * b);\r\n        return result;\r\n    },\r\n    div: function (a, b) {\r\n        const result = [];\r\n        if (Array.isArray(b))\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b[i]);\r\n        else\r\n            for (let i = 0; i < a.length; i++) result.push(a[i] / b);\r\n        return result;\r\n    },\r\n    length: function (a) {\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) sum += a[i] * a[i];\r\n        return Math.sqrt(sum);\r\n    },\r\n    average: function (a, b) {\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push((a[i] + b[i]) / 2);\r\n        return result;\r\n    },\r\n    cross: function (a, b) {\r\n        return [\r\n            a[1] * b[2] - a[2] * b[1],\r\n            a[2] * b[0] - a[0] * b[2],\r\n            a[0] * b[1] - a[1] * b[0],\r\n        ];\r\n    },\r\n    dot: function (a, b) {\r\n        let result = 0;\r\n        for (let i = 0; i < a.length; i++)\r\n            result += a[i] * b[i];\r\n        return result;\r\n    },\r\n    normalize: function (a) {\r\n        const length = window.frag.Vector.length(a);\r\n        if (length < 1e-5) return a;\r\n\r\n        const result = [];\r\n        for (let i = 0; i < a.length; i++) result.push(a[i] / length);\r\n        return result;\r\n    },\r\n    append: function(a, v) {\r\n        for (let i = 0; i < v.length; i++) a.push(v[i]);\r\n    }\r\n}\r\n","﻿// Represents a collection of mesh fragments where each\r\n// fragment is a collection of triangles\r\nwindow.frag.MeshData = function () {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n        glBuffer: gl.createBuffer(),\r\n        meshFragments: [],\r\n        debugFragments: [],\r\n        finalized: false,\r\n        fromBuffer: false,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        wireframe: false,\r\n        normalLength: 0,\r\n        normalColor: [0, 0, 255],\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        calcNormals: true,\r\n        calcTangents: true,\r\n        calcBitangents: false,\r\n    };\r\n\r\n    public.dispose = function () {\r\n        if (private.glBuffer) {\r\n            gl.deleteBuffer(private.glBuffer);\r\n            private.glBuffer = null;\r\n        }\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.clear = function () {\r\n        private.meshFragments.length = 0;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeSmooth = function () {\r\n        private.smoothShading = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function () {\r\n        private.smoothShading = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function () {\r\n        private.smoothTexture = true;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function () {\r\n        private.smoothTexture = false;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe) {\r\n        private.wireframe = !!drawWireframe;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function (length, color) {\r\n        private.normalLength = length;\r\n        if (color !== undefined) private.normalColor = color;\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    private.Fragment = function(vertexData) {\r\n        return {\r\n            vertexData,\r\n            renderData: null,\r\n            vertexDataOffset: undefined,\r\n            colorDataOffset: undefined,\r\n            uvDataOffset: undefined,\r\n            normalDataOffset: undefined,\r\n            tangentDataOffset: undefined,\r\n            bitangentDataOffset: undefined,\r\n        };\r\n    }\r\n\r\n    private.addFragment = function (vertexData) {\r\n        private.meshFragments.push(private.Fragment(vertexData));\r\n        private.finalized = false;\r\n        return public;\r\n    }\r\n\r\n    public.addVertexData = function (vertexData) {\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles2D(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangles(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleStrip(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.addTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        const vertexData = frag.VertexData().setTriangleFan(verticies, colors, uvs, normals, tangents, bitangents);\r\n        return private.addFragment(vertexData);\r\n    }\r\n\r\n    public.fromBuffer = function (buffer, size, count, primitiveType, vertexDataOffset, colorDataOffset, uvDataOffset, normalDataOffset, tangentDataOffset, bitangentDataOffset)\r\n    {\r\n        const vertexData = frag.VertexData();\r\n        vertexData.vertexDimensions = size;\r\n        vertexData.vertexCount = count;\r\n        vertexData.primitiveType = primitiveType;\r\n        vertexData.extractTriangles = function () { };\r\n\r\n        private.addFragment(vertexData);\r\n        const fragment = private.meshFragments[private.meshFragments.length - 1];\r\n\r\n        fragment.renderData = vertexData;\r\n        fragment.vertexDataOffset = vertexDataOffset;\r\n        fragment.colorDataOffset = colorDataOffset;\r\n        fragment.uvDataOffset = uvDataOffset;\r\n        fragment.normalDataOffset = normalDataOffset;\r\n        fragment.tangentDataOffset = tangentDataOffset;\r\n        fragment.bitangentDataOffset = bitangentDataOffset;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        private.finalized = true;\r\n        private.fromBuffer = true;\r\n\r\n        return public;\r\n    }\r\n\r\n    private.addFragmentDebugInfo = function(fragment) {\r\n        if (!private.wireframe && private.normalLength == 0) return;\r\n\r\n        let newFragment = fragment;\r\n        if (!private.wireframe) {\r\n            newFragment = private.Fragment(fragment.vertexData)\r\n            private.debugFragments.push(newFragment);\r\n        }\r\n\r\n        const verticies = [];\r\n        const colors = [];\r\n        const uvs = [];\r\n        const normals = [];\r\n\r\n        const addVertex = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const color = fragment.renderData.getColor(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n            if (vertex) vertex.forEach(v => verticies.push(v));\r\n            if (color) color.forEach((c) => colors.push(c));\r\n            else private.normalColor.forEach(() => colors.push(0));\r\n            if (uv) uv.forEach(t => uvs.push(t));\r\n            if (normal) normal.forEach(n => normals.push(n));\r\n        };\r\n\r\n        const addNormal = function (i) {\r\n            const vertex = fragment.renderData.getVertexVector(i);\r\n            const uv = fragment.renderData.getUvVector(i);\r\n            const normal = fragment.renderData.getNormalVector(i);\r\n\r\n            if (vertex) {\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j])\r\n                }\r\n                for (let j = 0; j < vertex.length; j++) {\r\n                    verticies.push(vertex[j] + normal[j] * private.normalLength)\r\n                }\r\n            }\r\n\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n            private.normalColor.forEach((c) => colors.push(c));\r\n\r\n            if (uv) {\r\n                uv.forEach(t => uvs.push(t));\r\n                uv.forEach(t => uvs.push(t));\r\n            }\r\n\r\n            if (normal) {\r\n                normal.forEach(n => normals.push(n));\r\n                normal.forEach(n => normals.push(n));\r\n            }\r\n        };\r\n\r\n        fragment.vertexData.extractTriangles(function (a, b, c) {\r\n            if (private.wireframe) {\r\n                addVertex(a); addVertex(b);\r\n                addVertex(b); addVertex(c);\r\n                addVertex(c); addVertex(a);\r\n            }\r\n            if (private.normalLength > 0) {\r\n                addNormal(a);\r\n                addNormal(b);\r\n                addNormal(b);\r\n            }\r\n        });\r\n\r\n        if (fragment.vertexData.vertexDimensions == 2)\r\n            newFragment.renderData = frag.VertexData().setLines2D(verticies, colors, uvs, normals);\r\n        else\r\n            newFragment.renderData = frag.VertexData().setLines(verticies, colors, uvs, normals);\r\n    }\r\n\r\n    private.finalize = function () {\r\n        private.finalized = true;\r\n\r\n        const optimizer = frag.MeshOptimizer()\r\n            .setFragments(private.meshFragments)\r\n            .initialize(private.smoothShading, private.smoothTexture);\r\n\r\n        if (public.calcTangents) optimizer.calcTangentsFromUvs();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromUvs();\r\n        if (public.calcNormals) optimizer.calcNormalsFromCross();\r\n        if (public.calcNormals) optimizer.calcNormalsFromGeometry();\r\n        if (public.calcBitangents) optimizer.calcBitangentsFromCross();\r\n\r\n        private.debugFragments = [];\r\n        private.meshFragments.forEach((f) => {\r\n            private.addFragmentDebugInfo(f);\r\n        });\r\n\r\n        let length = 0;\r\n        const countFragmentLength = function(fragment){\r\n            length += fragment.renderData.verticies.length;\r\n            if (fragment.renderData.colors) length += fragment.renderData.colors.length;\r\n            if (fragment.renderData.uvs) length += fragment.renderData.uvs.length;\r\n            if (fragment.renderData.normals) length += fragment.renderData.normals.length;\r\n            if (fragment.renderData.tangents) length += fragment.renderData.tangents.length;\r\n            if (fragment.renderData.bitangents) length += fragment.renderData.bitangents.length;\r\n        }\r\n        private.meshFragments.forEach(countFragmentLength);\r\n        private.debugFragments.forEach(countFragmentLength);\r\n        \r\n        const buffer = new Float32Array(length);\r\n\r\n        let offset = 0;\r\n\r\n        const copy = function (arr) {\r\n            if (!arr) return undefined;\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n                buffer[offset + i] = arr[i];\r\n            }\r\n            const o = offset;\r\n            offset += arr.length;\r\n            return o * Float32Array.BYTES_PER_ELEMENT;\r\n        };\r\n\r\n        const copyFragmentData = function(fragment) {\r\n            fragment.vertexDataOffset = copy(fragment.renderData.verticies);\r\n            fragment.colorDataOffset = copy(fragment.renderData.colors);\r\n            fragment.uvDataOffset = copy(fragment.renderData.uvs);\r\n            fragment.normalDataOffset = copy(fragment.renderData.normals);\r\n            fragment.tangentDataOffset = copy(fragment.renderData.tangents);\r\n            fragment.bitangentDataOffset = copy(fragment.renderData.bitangents);\r\n        };\r\n        private.meshFragments.forEach(copyFragmentData);\r\n        private.debugFragments.forEach(copyFragmentData);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\r\n\r\n        return public;\r\n    }\r\n\r\n    private.drawFragmentPosition = function(shader, fragment) {\r\n        if (shader.attributes.position >= 0) {\r\n            if (fragment.vertexDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.position)\r\n                gl.vertexAttribPointer(shader.attributes.position, fragment.renderData.vertexDimensions, gl.FLOAT, false, 0, fragment.vertexDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.position)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentColor = function(shader, fragment) {\r\n        if (shader.attributes.color >= 0) {\r\n            if (fragment.colorDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.color)\r\n                gl.vertexAttribPointer(shader.attributes.color, fragment.renderData.colorDimensions, gl.FLOAT, false, 0, fragment.colorDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.color)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTexture = function(shader, fragment) {\r\n        if (shader.attributes.texture >= 0) {\r\n            if (fragment.uvDataOffset != undefined) {\r\n                gl.enableVertexAttribArray(shader.attributes.texture);\r\n                gl.vertexAttribPointer(shader.attributes.texture, fragment.renderData.uvDimensions, gl.FLOAT, false, 0, fragment.uvDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.texture)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentNormals = function(shader, fragment) {\r\n        if (shader.attributes.normal >= 0) {\r\n            if (fragment.normalDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.normal);\r\n                gl.vertexAttribPointer(shader.attributes.normal, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.normalDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.normal)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentTangents = function(shader, fragment) {\r\n        if (shader.attributes.tangent >= 0) {\r\n            if (fragment.tangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.tangent);\r\n                gl.vertexAttribPointer(shader.attributes.tangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.tangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.tangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragmentBitangents = function(shader, fragment) {\r\n        if (shader.attributes.bitangent >= 0) {\r\n            if (fragment.bitangentDataOffset != null) {\r\n                gl.enableVertexAttribArray(shader.attributes.bitangent);\r\n                gl.vertexAttribPointer(shader.attributes.bitangent, fragment.renderData.normalDimensions, gl.FLOAT, true, 0, fragment.bitangentDataOffset);\r\n            } else {\r\n                gl.disableVertexAttribArray(shader.attributes.bitangent)\r\n            }\r\n        }\r\n    }\r\n\r\n    private.drawFragment = function(shader, fragment) {\r\n        private.drawFragmentPosition(shader, fragment);\r\n        private.drawFragmentColor(shader, fragment);\r\n        private.drawFragmentTexture(shader, fragment);\r\n        private.drawFragmentNormals(shader, fragment);\r\n        private.drawFragmentTangents(shader, fragment);\r\n        private.drawFragmentBitangents(shader, fragment);\r\n        gl.drawArrays(fragment.renderData.primitiveType, 0, fragment.renderData.vertexCount);\r\n    }\r\n\r\n    public.draw = function (gl, shader) {\r\n        if (!private.finalized && !private.fromBuffer) private.finalize();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, private.glBuffer);\r\n\r\n        for (let i = 0; i < private.meshFragments.length; i++) {\r\n            const fragment = private.meshFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        for (let i = 0; i < private.debugFragments.length; i++) {\r\n            const fragment = private.debugFragments[i];\r\n            private.drawFragment(shader, fragment);\r\n        }\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// Applies mesh smoothing and calculates normals and binormals where required\r\nwindow.frag.MeshOptimizer = function () {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        meshFragments: null,\r\n        smoothShading: true,\r\n        smoothTexture: false,\r\n        fragmentTriangles: null,\r\n        groups: null,\r\n        groupIndecies: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    private.ensureTriangles = function () {\r\n        if (private.fragmentTriangles) return;\r\n\r\n        private.fragmentTriangles = [];\r\n\r\n        private.meshFragments.forEach(fragment => {\r\n            const vertexData = fragment.vertexData;\r\n            const fragmentTriangles = {\r\n                triangles: [],\r\n                vertexTriangleIndecies: []\r\n            };\r\n            fragmentTriangles.vertexTriangleIndecies.length = vertexData.vertexCount;\r\n            if (vertexData.verticies) {\r\n                vertexData.extractTriangles(function (a, b, c) {\r\n                    const vectorA = vertexData.getVertexVector(a);\r\n                    const vectorB = vertexData.getVertexVector(b);\r\n                    const vectorC = vertexData.getVertexVector(c);\r\n\r\n                    const fragmentTriangle = {\r\n                        triangle: frag.Triangle.makeTriangleFromVectors(vectorA, vectorB, vectorC),\r\n                        normal: null,\r\n                        tangent: null,\r\n                        bitangent: null\r\n                    };\r\n                    fragmentTriangle.normal = frag.Triangle.normal(fragmentTriangle.triangle);\r\n\r\n                    if (vertexData.uvs) {\r\n                        const uvA = vertexData.getUvVector(a);\r\n                        const uvB = vertexData.getUvVector(b);\r\n                        const uvC = vertexData.getUvVector(c);\r\n\r\n                        const deltaPos1 = frag.Vector.sub(vectorB, vectorA);\r\n                        const deltaPos2 = frag.Vector.sub(vectorC, vectorA);\r\n                        const deltaUv1 = frag.Vector.sub(uvB, uvA);\r\n                        const deltaUv2 = frag.Vector.sub(uvC, uvA);\r\n\r\n                        const r = deltaUv1[0] * deltaUv2[1] - deltaUv1[1] * deltaUv2[0];\r\n                        if (r === 0) {\r\n                            fragmentTriangle.tangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                            fragmentTriangle.bitangent = frag.Vector.zero(vertexData.normalDimensions);\r\n                        } else {\r\n                            const ri = 1 / r;\r\n                            fragmentTriangle.tangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos1, deltaUv2[1]), frag.Vector.mult(deltaPos2, deltaUv1[1])), ri));\r\n                            fragmentTriangle.bitangent = frag.Vector.normalize(frag.Vector.mult(frag.Vector.sub(frag.Vector.mult(deltaPos2, deltaUv1[0]), frag.Vector.mult(deltaPos1, deltaUv2[0])), ri));\r\n                        }\r\n                    }\r\n\r\n                    fragmentTriangles.triangles.push(fragmentTriangle);\r\n                    const index = fragmentTriangles.triangles.length - 1;\r\n\r\n                    fragmentTriangles.vertexTriangleIndecies[a] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[b] = index;\r\n                    fragmentTriangles.vertexTriangleIndecies[c] = index;\r\n                });\r\n            }\r\n\r\n            private.fragmentTriangles.push(fragmentTriangles);\r\n        });\r\n    }\r\n\r\n    private.ensureGroups = function () {\r\n        if (private.groups) return;\r\n\r\n        private.groups = [];\r\n        private.groupIndecies = {};\r\n\r\n        const equal = function (vertexData, index, vertex) {\r\n            if (vertexData.vertexDimensions !== vertex.length) return false;\r\n            const offset = vertexData.vertexIndex(index);\r\n            for (var i = 0; i < vertex.length; i++)\r\n                if (Math.abs(vertexData.verticies[offset + i] - vertex[i]) > 0.00001) return false;\r\n            return true;\r\n        };\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const groupIndecies = private.groupIndecies[fragmentIndex] || [];\r\n            private.groupIndecies[fragmentIndex] = groupIndecies;\r\n\r\n            if (fragment.vertexData.verticies) {\r\n                for (let vertexIndex = 0; vertexIndex < fragment.vertexData.vertexCount; vertexIndex++) {\r\n                    let found = false;\r\n                    for (var groupIndex = 0; !found && groupIndex < private.groups.length; groupIndex++) {\r\n                        const group = private.groups[groupIndex];\r\n                        if (equal(fragment.vertexData, vertexIndex, group.vertex)) {\r\n                            group.fragmentIndecies[fragmentIndex] = group.fragmentIndecies[fragmentIndex] || [];\r\n                            group.fragmentIndecies[fragmentIndex].push(vertexIndex);\r\n                            groupIndecies.push(groupIndex);\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        groupIndecies.push(private.groups.length);\r\n                        const group = {\r\n                            vertex: fragment.vertexData.getVertexVector(vertexIndex),\r\n                            fragmentIndecies: {},\r\n                            normal: frag.Vector.zero(fragment.vertexData.normalDimensions),\r\n                            uv: frag.Vector.zero(fragment.vertexData.uvDimensions),\r\n                        };\r\n                        group.fragmentIndecies[fragmentIndex] = [vertexIndex];\r\n                        private.groups.push(group);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcGroupNormals = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            group.normal = frag.Vector.zero(private.meshFragments[0].renderData.normalDimensions);\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData && vertexData.normals) {\r\n                    const fragmentIndecies = group.fragmentIndecies[fragmentIndex];\r\n                    for (let i = 0; i < fragmentIndecies.length; i++) {\r\n                        const vertexIndex = fragmentIndecies[i];\r\n                        const vertexNormal = vertexData.getNormalVector(vertexIndex);\r\n                        group.normal = frag.Vector.add(group.normal, vertexNormal);\r\n                    }\r\n                }\r\n            };\r\n            group.normal = frag.Vector.normalize(group.normal);\r\n        }\r\n    };\r\n\r\n    private.calcGroupUvs = function () {\r\n        private.ensureGroups();\r\n        for (let groupIndex = 0; groupIndex < private.groups.length; groupIndex++) {\r\n            const group = private.groups[groupIndex];\r\n            for (const fragmentIndex in group.fragmentIndecies) {\r\n                const fragment = private.meshFragments[fragmentIndex];\r\n                const vertexData = fragment.renderData ? fragment.renderData : fragment.vertexData;\r\n                if (vertexData) {\r\n                    const fragmentIndicies = group.fragmentIndecies[fragmentIndex];\r\n                    if (fragmentIndicies.length > 0) {\r\n                        const vertexIndex = fragmentIndicies[0];\r\n                        group.uv = vertexData.getUvVector(vertexIndex);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    private.calcSmoothShading = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            if (!fragment.renderData.normals) return;\r\n        }\r\n\r\n        private.calcGroupNormals();\r\n\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                renderData.normals = [];\r\n                for (var vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < renderData.normalDimensions; i++)\r\n                        renderData.normals.push(group.normal[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private.calcSmoothTexture = function () {\r\n        private.calcGroupUvs();\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const vertexData = private.meshFragments[fragmentIndex].renderData;\r\n            const groupIndecies = private.groupIndecies[fragmentIndex];\r\n            if (groupIndecies.length) {\r\n                vertexData.uvs = [];\r\n                for (var vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                    const group = private.groups[groupIndecies[vertexIndex]];\r\n                    for (var i = 0; i < vertexData.uvDimensions; i++)\r\n                        vertexData.uvs.push(group.uv[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public.setFragments = function (meshFragments) {\r\n        private.meshFragments = meshFragments;\r\n        return public;\r\n    };\r\n\r\n    public.initialize = function (smoothShading, smoothTexture) {\r\n        private.smoothShading = smoothShading;\r\n        private.smoothTexture = smoothTexture;\r\n\r\n        private.meshFragments.forEach((fragment) => {\r\n            fragment.renderData = fragment.vertexData.clone();\r\n        });\r\n\r\n        if (smoothTexture) {\r\n            private.calcSmoothTexture();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcTangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.tangents) {\r\n                if (vertexData.tangents) {\r\n                    renderData.tangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.tangents.push(vertexData.tangents[vertexData.tangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.tangents = [];\r\n                            renderData.tangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setTangentVector(vertexIndex, triangle.tangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromUvs = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.uvs) {\r\n                        private.ensureTriangles();\r\n                        const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                        if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                            renderData.bitangents = [];\r\n                            renderData.bitangents.length = renderData.normalDimensions * renderData.vertexCount;\r\n                            for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                                const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                                const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                                if (triangle) {\r\n                                    renderData.setBitangentVector(vertexIndex, triangle.bitangent);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.bitangents) {\r\n                        renderData.normals = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = renderData.getBitangentVector(vertexIndex);\r\n                            const normal = frag.Vector.cross(tangent, bitangent);\r\n                            for (var i = 0; i < normal.length; i++) {\r\n                                renderData.normals.push(normal[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcNormalsFromGeometry = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.normals) {\r\n                if (vertexData.normals) {\r\n                    renderData.normals = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.normals.push(vertexData.normals[vertexData.normalIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    private.ensureTriangles();\r\n                    const fragmentTriangles = private.fragmentTriangles[fragmentIndex];\r\n                    if (fragmentTriangles && fragmentTriangles.triangles) {\r\n                        renderData.normals = [];\r\n                        renderData.normals.length = renderData.normalDimensions * renderData.vertexCount;\r\n                        for (let vertexIndex = 0; vertexIndex < renderData.vertexCount; vertexIndex++) {\r\n                            const triangleIndex = fragmentTriangles.vertexTriangleIndecies[vertexIndex];\r\n                            const triangle = fragmentTriangles.triangles[triangleIndex];\r\n                            if (triangle) renderData.setNormalVector(vertexIndex, triangle.normal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (private.smoothShading) {\r\n            private.calcSmoothShading();\r\n        }\r\n        return public;\r\n    };\r\n\r\n    public.calcBitangentsFromCross = function () {\r\n        for (let fragmentIndex = 0; fragmentIndex < private.meshFragments.length; fragmentIndex++) {\r\n            const fragment = private.meshFragments[fragmentIndex];\r\n            const renderData = fragment.renderData;\r\n            const vertexData = fragment.vertexData;\r\n            if (!renderData.bitangents) {\r\n                if (vertexData.bitangents) {\r\n                    renderData.bitangents = [];\r\n                    for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                        for (var i = 0; i < vertexData.normalDimensions; i++) {\r\n                            renderData.bitangents.push(vertexData.bitangents[vertexData.bitangentIndex(vertexIndex, i)]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (renderData.tangents && renderData.normals) {\r\n                        renderData.bitangents = [];\r\n                        for (let vertexIndex = 0; vertexIndex < vertexData.vertexCount; vertexIndex++) {\r\n                            const normal = renderData.getNormalVector(vertexIndex);\r\n                            const tangent = renderData.getTangentVector(vertexIndex);\r\n                            const bitangent = frag.Vector.cross(normal, tangent);\r\n                            for (var i = 0; i < bitangent.length; i++) {\r\n                                renderData.bitangents.push(bitangent[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.Model = function (is3d, parent) {\r\n    const frag = window.frag;\r\n\r\n    if (is3d === undefined) {\r\n        if (parent && parent.location)\r\n            is3d = parent.location.is3d;\r\n        else\r\n            is3d = true;\r\n    }\r\n\r\n    const private = {\r\n        name: null,\r\n        parent,\r\n        children: [],\r\n        meshData: null,\r\n        shader: null,\r\n        material: null,\r\n    }\r\n\r\n    const public = {\r\n        __private: private,\r\n        location: frag.Location(is3d),\r\n        animations: []\r\n    };\r\n\r\n    public.dispose = function(){\r\n    }\r\n\r\n    public.addFlattenedChildren = function (flattenedChildren, predicate) {\r\n        for (let i = 0; i < private.children.length; i++) {\r\n            let child = private.children[i];\r\n            if (predicate(child)) flattenedChildren.push(child);\r\n            child.addFlattenedChildren(flattenedChildren, predicate);\r\n        }\r\n    }\r\n\r\n    public.getPosition = function() {\r\n        return frag.ScenePosition(public.location);\r\n    }\r\n\r\n    public.name = function (value) {\r\n        private.name = value;\r\n        return public;\r\n    }\r\n\r\n    public.getName = function () {\r\n        return private.name;\r\n    }\r\n\r\n    public.shader = function (value) {\r\n        if (value.is3d !== public.location.is3d){\r\n            const m = public.location.is3d ? \"3D\" : \"2D\";\r\n            console.error(\"Model '\" + private.name + \"' has a \" + m + \" location and must use a \" + m + \" shader\");\r\n        }\r\n        private.shader = value;\r\n        return public;\r\n    }\r\n\r\n    public.getShader = function () {\r\n        if (private.shader) return private.shader;\r\n        if (private.parent) return private.parent.getShader();\r\n        return undefined;\r\n    }\r\n\r\n    public.mesh = function (value) {\r\n        private.meshData = value;\r\n        return public;\r\n    }\r\n\r\n    public.material = function (value) {\r\n        private.material = value;\r\n        return public;\r\n    }\r\n\r\n    public.getMaterial = function () {\r\n        if (private.material) return private.material;\r\n        if (private.parent) return private.parent.getMaterial();\r\n        return undefined;\r\n    }\r\n\r\n    public.addChild = function (child) {\r\n        if (child) {\r\n            child.__private.parent = public;\r\n        } else {\r\n            child = window.frag.Model(undefined, public);\r\n        }\r\n        private.children.push(child);\r\n        return child;\r\n    }\r\n\r\n    public.shadeSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.shadeFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.shadeFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.shadeFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureSmooth = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureSmooth();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureSmooth(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.textureFlat = function (depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.textureFlat();\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.textureFlat(depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.wireframe = function (drawWireframe, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.wireframe(drawWireframe);\r\n        \r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.wireframe(drawWireframe, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.drawNormals = function(length, color, depth) {\r\n        if (depth === undefined) depth = -1;\r\n        if (private.meshData) private.meshData.drawNormals(length, color);\r\n\r\n        if (depth === 0) return public;\r\n        private.children.forEach((c) => { c.drawNormals(length, color, depth-1); });\r\n        return public;\r\n    }\r\n\r\n    public.addAnimation = function (modelAnimation) {\r\n        const children = [];\r\n        public.addFlattenedChildren(children, function (child) { return child.getName(); });\r\n\r\n        const childAnimations = [];\r\n        const graphs = modelAnimation.getChannelGraphs();\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            const childName = child.getName();\r\n            for (let j = 0; j < graphs.length; j++) {\r\n                const graph = graphs[j];\r\n                if (graph.pattern.test(childName)) {\r\n                    childAnimations.push({\r\n                        graph: graph,\r\n                        model: child\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (childAnimations.length > 0)\r\n            public.animations.push({ modelAnimation, childAnimations });\r\n\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl, modelToWorldMatrix, modelToClipMatrix, animationMap) {\r\n        if (!public.location) return public;\r\n\r\n        const animationState = animationMap && private.name ? animationMap[private.name] : null;\r\n        const location = animationState\r\n            ? public.location.clone().add(animationState.location)\r\n            : public.location;\r\n        const localMatrix = location.getMatrix();\r\n\r\n        if (location.is3d) {\r\n            modelToWorldMatrix = frag.Matrix.m4Xm4(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m4Xm4(modelToClipMatrix, localMatrix);\r\n        } else {\r\n            modelToWorldMatrix = frag.Matrix.m3Xm3(modelToWorldMatrix, localMatrix);\r\n            modelToClipMatrix = frag.Matrix.m3Xm3(modelToClipMatrix, localMatrix);\r\n        }\r\n\r\n        const shader = public.getShader();\r\n\r\n        if (shader !== undefined && private.meshData) {\r\n            shader.bind(gl);\r\n\r\n            var material = public.getMaterial();\r\n            if (material) material.apply(gl, shader);\r\n\r\n            if (shader.uniforms.clipMatrix !== undefined) {\r\n                const modelToClipTransform = location.is3d ? frag.Transform(modelToClipMatrix) : frag.Transform2D(modelToClipMatrix);\r\n                modelToClipTransform.apply(gl, shader.uniforms.clipMatrix);\r\n            }\r\n\r\n            if (shader.uniforms.modelMatrix !== undefined) {\r\n                const modelToWorldTransform = location.is3d ? frag.Transform(modelToWorldMatrix) : frag.Transform2D(modelToWorldMatrix);\r\n                modelToWorldTransform.apply(gl, shader.uniforms.modelMatrix);\r\n            }\r\n\r\n            private.meshData.draw(gl, shader);\r\n\r\n            shader.unbind(gl);\r\n        }\r\n\r\n        for (let i = 0; i < private.children.length; i++)\r\n            private.children[i].draw(gl, modelToWorldMatrix, modelToClipMatrix, animationMap);\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿// A public is a camera and a collection of meshes. The camera defines how the\r\n// meshes will be projected onto the viewport. Several scenes can be projecterd onto\r\n// the same viewport, but only one of these scenes should set the viewport and the rest\r\n// should adjust to the viewport.\r\n\r\nwindow.frag.Scene = function() {\r\n    const private = {\r\n        sceneObjects: [],\r\n        activeCamera: null\r\n    }\r\n\r\n    private.cameraUpdated = function() {\r\n    }\r\n\r\n    const public = {\r\n        __private: private\r\n    };\r\n\r\n    public.dispose = function() {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n    }\r\n\r\n    public.addObject = function(sceneObject) {\r\n        private.sceneObjects.push(sceneObject);\r\n        return public;\r\n    };\r\n\r\n    public.removeObject = function(sceneObject) {\r\n        for (let i = 0; i < private.sceneObjects.length; i++) {\r\n            if (private.sceneObjects[i] === sceneObject) {\r\n                private.sceneObjects.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public.camera = function(camera) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.worldToClipTransform.observableMatrix.unsubscribe(private.cameraUpdated);\r\n\r\n        private.activeCamera = camera;\r\n\r\n        if (camera)\r\n            camera.worldToClipTransform.observableMatrix.subscribe(private.cameraUpdated);\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.setViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.adjustToViewport = function (gl) {\r\n        if (private.activeCamera)\r\n            private.activeCamera.adjustToViewport(gl);\r\n        return public;\r\n    }\r\n\r\n    public.draw = function (gl) {\r\n        if (private.activeCamera) {\r\n            for (let i = 0; i < private.sceneObjects.length; i++)\r\n                private.sceneObjects[i].draw(gl, private.activeCamera.worldToClipTransform);\r\n        }\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.SceneObject = function (model) {\r\n    const frag = window.frag;\r\n\r\n    const private = {\r\n        model,\r\n        enabled: true,\r\n        location: null,\r\n        animationLocation: null,\r\n        animationMap: {}\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        animations: {}\r\n    };\r\n\r\n    for (let i = 0; i < model.animations.length; i++) {\r\n        const animation = model.animations[i];\r\n        for (let j = 0; j < animation.childAnimations.length; j++) {\r\n            const childModelName = animation.childAnimations[j].model.getName();\r\n            if (!private.animationMap[childModelName]) {\r\n                const animationState = window.frag.ObjectAnimationState();\r\n                if (window.frag.debugAnimations) {\r\n                    animationState.__private.modelName = model.getName();\r\n                    animationState.__private.childModelName = childModelName;\r\n                }\r\n                private.animationMap[childModelName] = animationState;\r\n            }\r\n        }\r\n        const objectAnimation = window.frag.SceneObjectAnimation(animation, private.animationMap);\r\n        public.animations[animation.modelAnimation.getName()] = objectAnimation;\r\n    };\r\n\r\n    private.getLocation = function () {\r\n        if (private.location) return private.location;\r\n        if (!private.model.location) return null;\r\n        private.location = frag.Location(private.model.location.is3d);\r\n        return private.location;\r\n    };\r\n\r\n    private.getAnimationLocation = function () {\r\n        if (private.animationLocation) return private.animationLocation;\r\n        if (!private.model.location) return null;\r\n        private.animationLocation = frag.Location(private.model.location.is3d);\r\n        return private.animationLocation;\r\n    };\r\n\r\n    /**\r\n     * @returns a ScemePosition object that can be used to manipulate the position\r\n     * scale and orientation of this object in the scene\r\n     */\r\n    public.getPosition = function () {\r\n        const location = private.getLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * @returns a ScenePosition object that can be used to change the animation\r\n     * position of the scene object. The animation position is added to the scene\r\n     * object's static position to create a temporary animation effect\r\n     */\r\n    public.getAnimationPosition = function () {\r\n        const location = private.getAnimationLocation();\r\n        if (!location) return null;\r\n        return frag.ScenePosition(location);\r\n    };\r\n\r\n    /**\r\n     * Clears any animation position that was set. This is more efficient\r\n     * than setting the animation location to zero\r\n     */\r\n    public.clearAnimationPosition = function () {\r\n        private.animationLocation = null;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Includes this object in the scene. Call this function when the object\r\n     * could possibly be seen by the player. The engine will go through the\r\n     * process of transforming the mesh into screen space and clip anything\r\n     * that is not within the screen bounds. To avoid this expensive operations\r\n     * for objects that you know cannot be seen by the player, call the disable() \r\n     * function.\r\n     */\r\n    public.enable = function () {\r\n        private.enabled = true;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Excludes this object in the scene. Call this function when the object\r\n     * is not viewable through the player's viewport - for example it moved\r\n     * behind the player's point of view.\r\n     */\r\n     public.disable = function () {\r\n        private.enabled = false;\r\n        return public;\r\n    };\r\n\r\n    /**\r\n     * Frees any resources consumed by this scene object and removes it from\r\n     * the scene.\r\n     */\r\n    public.dispose = function() {\r\n        public.disable();\r\n        return public;\r\n    }\r\n\r\n    /**\r\n     * This is used internally by the engine. Don't call this from your game code\r\n     */\r\n    public.draw = function (gl, worldToClipTransform) {\r\n        if (!private.enabled) return public;\r\n\r\n        let location = private.getLocation();\r\n        if (!location) return public;\r\n\r\n        if (private.animationLocation) {\r\n            location = location.clone().add(private.animationLocation);\r\n        }\r\n\r\n        const worldToClipMatrix = worldToClipTransform.getMatrix();\r\n        const modelToWorldMatrix = location.getMatrix();\r\n        const modelToClipMatrix = worldToClipTransform.is3d\r\n            ? frag.Matrix.m4Xm4(worldToClipMatrix, modelToWorldMatrix)\r\n            : frag.Matrix.m3Xm3(worldToClipMatrix, modelToWorldMatrix);\r\n\r\n        private.model.draw(gl, modelToWorldMatrix, modelToClipMatrix, private.animationMap);\r\n\r\n        return public;\r\n    };\r\n\r\n    return public;\r\n};","﻿// This class provides a set of helper methods for\r\n// manipulating a Location object\r\nwindow.frag.ScenePosition = function (location) {\r\n    const private = {\r\n        location: null,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.setLocation = function (value) {\r\n        private.location = value || window.frag.Location();\r\n        return public;\r\n    }\r\n    public.setLocation(location);\r\n\r\n    public.getMatrix = function () {\r\n        return private.location.getMatrix();\r\n    }\r\n\r\n    public.getScaleX = function () {\r\n        return private.location.scaleX;\r\n    }\r\n\r\n    public.getScaleY = function () {\r\n        return private.location.scaleY;\r\n    }\r\n\r\n    public.getScaleZ = function () {\r\n        return private.location.scaleZ;\r\n    }\r\n\r\n    public.scale = function (s) {\r\n        private.location.scaleX = s;\r\n        private.location.scaleY = s;\r\n        private.location.scaleZ = s;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleXYZ = function (x, y, z) {\r\n        private.location.scaleX = x;\r\n        private.location.scaleY = y;\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleX = function (x) {\r\n        private.location.scaleX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleY = function (y) {\r\n        private.location.scaleY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleZ = function (z) {\r\n        private.location.scaleZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.scaleBy = function(scales){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * scales[0],\r\n            private.location.scaleY * scales[1],\r\n            private.location.scaleZ * scales[2]);\r\n    }\r\n\r\n    public.scaleByXYZ = function(xScale, yScale, zScale){\r\n        public.scaleXYZ(\r\n            private.location.scaleX * xScale,\r\n            private.location.scaleY * yScale,\r\n            private.location.scaleZ * zScale);\r\n    }\r\n\r\n    public.getRotateX = function () {\r\n        return private.location.rotateX;\r\n    }\r\n\r\n    public.getRotateY = function () {\r\n        return private.location.rotateY;\r\n    }\r\n\r\n    public.getRotateZ = function () {\r\n        return private.location.rotateZ;\r\n    }\r\n\r\n    public.getRotate = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.rotateX, private.location.rotateY, private.location.rotateZ];\r\n        else\r\n            return [private.location.rotateX, private.location.rotateY];\r\n    }\r\n\r\n    public.rotate = function(v) {\r\n        private.location.rotateX = v[0];\r\n        if (v.length > 1) private.location.rotateY = v[1];\r\n        if (v.length > 2) private.location.rotateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateXYZ = function (x, y, z) {\r\n        private.location.rotateX = x;\r\n        private.location.rotateY = y;\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateX = function (x) {\r\n        private.location.rotateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateY = function (y) {\r\n        private.location.rotateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateZ = function (z) {\r\n        private.location.rotateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.rotateBy = function(euler){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + euler[0],\r\n            private.location.rotateY + euler[1],\r\n            private.location.rotateZ + euler[2]);\r\n    }\r\n\r\n    public.rotateByXYZ = function(x, y, z){\r\n        public.rotateXYZ(\r\n            private.location.rotateX + x,\r\n            private.location.rotateY + y,\r\n            private.location.rotateZ + z);\r\n    }\r\n\r\n    public.getLocationX = function () {\r\n        return private.location.translateX;\r\n    }\r\n\r\n    public.getLocationY = function () {\r\n        return private.location.translateY;\r\n    }\r\n\r\n    public.getLocationZ = function () {\r\n        return private.location.translateZ;\r\n    }\r\n\r\n    public.getLocation = function() {\r\n        if (private.location.is3d)\r\n            return [private.location.translateX, private.location.translateY, private.location.translateZ];\r\n        else\r\n            return [private.location.translateX, private.location.translateY];\r\n    }\r\n\r\n    public.location = function(v) {\r\n        private.location.translateX = v[0];\r\n        if (v.length > 1) private.location.translateY = v[1];\r\n        if (v.length > 2) private.location.translateZ = v[2];\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationXYZ = function (x, y, z) {\r\n        private.location.translateX = x;\r\n        private.location.translateY = y;\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationX = function (x) {\r\n        private.location.translateX = x;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationY = function (y) {\r\n        private.location.translateY = y;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.locationZ = function (z) {\r\n        private.location.translateZ = z;\r\n        private.location.isModified = true;\r\n        return public;\r\n    }\r\n\r\n    public.moveBy = function(direction){\r\n        public.locationXYZ(\r\n            private.location.translateX + direction[0],\r\n            private.location.translateY + direction[1],\r\n            private.location.translateZ + direction[2]);\r\n    }\r\n\r\n    public.moveByXYZ = function(x, y, z){\r\n        public.locationXYZ(\r\n            private.location.translateX + x,\r\n            private.location.translateY + y,\r\n            private.location.translateZ + z);\r\n    }\r\n\r\n    return public;\r\n};","﻿window.frag.VertexData = function() {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    const private = {\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n        primitiveType: gl.TRIANGLES,\r\n        vertexCount: 0,\r\n        verticies: undefined,\r\n        vertexDimensions: 3,\r\n        colors: undefined,\r\n        colorDimensions: 3,\r\n        uvs: undefined,\r\n        uvDimensions: 2,\r\n        normals: undefined,\r\n        normalDimensions: 3,\r\n        tangents: undefined,\r\n        bitangents: undefined,\r\n    };\r\n\r\n    public.clone = function () {\r\n        const clone = frag.VertexData();\r\n\r\n        clone.primitiveType = public.primitiveType;\r\n        clone.vertexCount = public.vertexCount;\r\n        clone.vertexDimensions = public.vertexDimensions;\r\n        clone.colorDimensions = public.colorDimensions;\r\n        clone.uvDimensions = public.uvDimensions;\r\n        clone.normalDimensions = public.normalDimensions;\r\n\r\n        clone.verticies = public.verticies;\r\n\r\n        if (public.colors) clone.colors = Array.from(public.colors);\r\n        if (public.uvs) clone.uvs = Array.from(public.uvs);\r\n        if (public.normals) clone.normals = Array.from(public.normals);\r\n        if (public.tangents) clone.tangents = Array.from(public.tangents);\r\n        if (public.bitangents) clone.bitangents = Array.from(public.bitangents);\r\n\r\n        return clone;\r\n    }\r\n\r\n    public.vertexIndex = function (index, coord) { return index * public.vertexDimensions + (coord || 0); };\r\n    public.colorIndex = function (index, coord) { return index * public.colorDimensions + (coord || 0); };\r\n    public.uvIndex = function (index, coord) { return index * public.uvDimensions + (coord || 0); };\r\n    public.normalIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.tangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n    public.bitangentIndex = function (index, coord) { return index * public.normalDimensions + (coord || 0); };\r\n\r\n    private.getVector = function (array, index, dimensions) {\r\n        if (dimensions === 2) return frag.Vector.extract2D(array, index);\r\n        return frag.Vector.extract3D(array, index);\r\n    };\r\n\r\n    private.setVector = function (array, index, v) {\r\n        for (i = 0; i < v.length; i++)\r\n            array[index + i] = v[i];\r\n    };\r\n\r\n    public.getVertexVector = function (index) {\r\n        return private.getVector(public.verticies, public.vertexIndex(index), public.vertexDimensions);\r\n    };\r\n\r\n    public.setVertexVector = function (index, v) {\r\n        return private.setVector(public.verticies, public.vertexIndex(index), v);\r\n    };\r\n\r\n    public.getColor = function (index) {\r\n        return private.getVector(public.colors, public.colorIndex(index), public.colorDimensions);\r\n    };\r\n\r\n    public.setColor = function (index, v) {\r\n        return private.setVector(public.colors, public.colorIndex(index), v);\r\n    };\r\n\r\n    public.getUvVector = function (index) {\r\n        return private.getVector(public.uvs, public.uvIndex(index), public.uvDimensions);\r\n    };\r\n\r\n    public.setUvVector = function (index, v) {\r\n        return private.setVector(public.uvs, public.uvIndex(index), v);\r\n    };\r\n\r\n    public.getNormalVector = function (index) {\r\n        return private.getVector(public.normals, public.normalIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setNormalVector = function (index, v) {\r\n        return private.setVector(public.normals, public.normalIndex(index), v);\r\n    };\r\n\r\n    public.getTangentVector = function (index) {\r\n        return private.getVector(public.tangents, public.tangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setTangentVector = function (index, v) {\r\n        return private.setVector(public.tangents, public.tangentIndex(index), v);\r\n    };\r\n\r\n    public.getBitangentVector = function (index) {\r\n        return private.getVector(public.bitangents, public.bitangentIndex(index), public.normalDimensions);\r\n    };\r\n\r\n    public.setBitangentVector = function (index, v) {\r\n        return private.setVector(public.bitangents, public.bitangentIndex(index), v);\r\n    };\r\n\r\n    public.setTriangles2D = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangles = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            for (let i = 0; i < public.vertexCount; i += 3) {\r\n                addTriangle(i, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleStrip = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                if ((i & 1) === 0) addTriangle(i, i + 1, i + 2);\r\n                else addTriangle(i + 2, i + 1, i);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setTriangleFan = function (verticies, colors, uvs, normals, tangents, bitangents) {\r\n        public.primitiveType = gl.TRIANGLE_FAN;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = tangents;\r\n        public.bitangents = bitangents;\r\n\r\n        public.extractTriangles = function (addTriangle) {\r\n            const triangleCount = public.vertexCount - 2;\r\n            for (let i = 0; i < triangleCount; i++) {\r\n                addTriangle(0, i + 1, i + 2);\r\n            }\r\n        };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines2D = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 2;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLines = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINES;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    public.setLineStrip = function (verticies, colors, uvs, normals) {\r\n        public.primitiveType = gl.LINE_STRIP;\r\n\r\n        public.vertexDimensions = 3;\r\n        public.verticies = verticies;\r\n        public.vertexCount = verticies.length / public.vertexDimensions;\r\n\r\n        public.colorDimensions = 3;\r\n        public.colors = colors;\r\n\r\n        public.uvDimensions = 2;\r\n        public.uvs = uvs;\r\n\r\n        public.normalDimensions = 3;\r\n        public.normals = normals;\r\n        public.tangents = null;\r\n        public.bitangents = null;\r\n\r\n        public.extractTriangles = function () { };\r\n\r\n        return public;\r\n    }\r\n\r\n    return public;\r\n};\r\n","﻿window.frag.createShader = function (name, type, source) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (success) return shader;\r\n\r\n    console.error('Failed to compile shader ' + name);\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    gl.deleteShader(shader);\r\n};\r\n\r\nwindow.frag.createProgram = function (name, vertexShader, fragmentShader) {\r\n    const frag = window.frag;\r\n    const gl = frag.gl;\r\n\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (success) return program;\r\n\r\n    console.error('Failed to link shaders into program ' + name);\r\n    console.log(frag.gl.getProgramInfoLog(program));\r\n    gl.deleteProgram(program);\r\n};\r\n\r\n// This builds a custom shader based on a set of options\r\nwindow.frag.Shader = function () {\r\n    const none = \"None\";\r\n    const private = {\r\n        name: \"Custom\",\r\n        verticies: \"XYZ\",\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        colors: none,\r\n        matrix: \"mat4\",\r\n        textureCoords: none,\r\n        diffuseTexture: none,\r\n        emmissiveTexture: none,\r\n        displacementTexture: none,\r\n        normalMap: none,\r\n        roughnessTexture: none,\r\n        shininessTexture: none,\r\n        metalinessTexture: none,\r\n        normals: none,\r\n        tangents: none,\r\n        bitangents: none,\r\n        directionalLight: none,\r\n        ambientLight: none,\r\n    };\r\n\r\n    const public = {\r\n        __private: private,\r\n    };\r\n\r\n    public.name = function (name) { private.name = name; return public; }\r\n\r\n    public.verticiesXY = function (z) { private.verticies = \"XY\"; private.z = z; return public; }\r\n    public.verticiesXZ = function (y) { private.verticies = \"XZ\"; private.y = y; return public; }\r\n    public.verticiesYZ = function (x) { private.verticies = \"YZ\"; private.x = x; return public; }\r\n    public.verticiesXYZ = function () { private.verticies = \"XYZ\"; return public; }\r\n    public.verticiesNone = function () { private.verticies = none; return public; }\r\n\r\n    public.matrix2D = function () { private.matrix = \"mat3\"; return public; }\r\n    public.matrix3D = function () { private.matrix = \"mat4\"; return public; }\r\n    public.matrixNone = function () { private.matrix = none; return public; }\r\n           \r\n    public.normals = function () { private.normals = \"vec3\"; return public; }\r\n\r\n    public.colorsRGB = function() { private.colors = \"vec3\"; return public; }\r\n    public.colorsRGBA = function() { private.colors = \"vec4\"; return public; }\r\n    public.colorsNone = function() { private.colors = none; return public; }\r\n\r\n    public.diffuseTexture = function () {\r\n        private.diffuseTexture = \"RGB\";\r\n        private.colors = none;\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public; \r\n    };\r\n\r\n    public.emmissiveTexture = function () {\r\n        private.emmissiveTexture = \"RGB\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        return public;\r\n    };\r\n\r\n    public.normalMapStandard = function () {\r\n        private.normalMap = \"Standard\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.normalMapOpenGL = function () {\r\n        private.normalMap = \"OpenGL\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        if (private.tangents === none) private.tangents = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.displacementTextureRaised = function () {\r\n        private.displacementTexture = \"Raised\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSunken = function () {\r\n        private.displacementTexture = \"Sunken\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.displacementTextureSigned = function () {\r\n        private.displacementTexture = \"Signed\";\r\n        if (private.textureCoords === none) private.textureCoords = \"vec2\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.tangents = function () {\r\n        private.tangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    };\r\n\r\n    public.bitangents = function () {\r\n        private.bitangents = \"vec3\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public; \r\n    };\r\n\r\n    public.directionalLightColor = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Color\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightWhite = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"White\";\r\n        if (private.ambientLight === none) private.ambientLight = none;\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightGrey = function () {\r\n        public.matrix3D();\r\n        private.directionalLight = \"Grey\";\r\n        if (private.ambientLight === none) private.ambientLight = \"Balanced\";\r\n        if (private.normals === none) private.normals = \"vec3\";\r\n        return public;\r\n    }\r\n\r\n    public.directionalLightNone = function () {\r\n        private.directionalLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightBalanced = function () {\r\n        private.ambientLight = \"Balanced\";\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightNone = function () {\r\n        private.ambientLight = none;\r\n        return public;\r\n    }\r\n\r\n    public.ambientLightFixed = function () {\r\n        private.ambientLight = \"Fixed\";\r\n        return public;\r\n    }\r\n\r\n    private.addAttributeDeclarations = function(shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"attribute vec4 a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"attribute vec2 a_position;\\n\";\r\n\r\n        if (private.colors !== none) shader.vSource += \"attribute \" + private.colors + \" a_color;\\n\";\r\n        if (private.textureCoords !== none) shader.vSource += \"attribute \" + private.textureCoords + \" a_texcoord;\\n\";\r\n        if (private.normals !== none) shader.vSource += \"attribute \" + private.normals + \" a_normal;\\n\";\r\n        if (private.tangents !== none) shader.vSource += \"attribute \" + private.tangents + \" a_tangent;\\n\";\r\n        if (private.bitangents !== none) shader.vSource += \"attribute \" + private.bitangents + \" a_bitangent;\\n\";\r\n    }\r\n\r\n    private.addUniformDeclarations = function (shader) {\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.vSource += \"uniform \" + private.matrix + \" u_modelMatrix;\\n\";\r\n            shader.vSource += \"uniform \" + private.matrix + \" u_clipMatrix;\\n\";\r\n        }\r\n        if (private.directionalLight !== none) shader.vSource += \"uniform vec3 u_lightDirection;\\n\";\r\n        if (private.directionalLight === \"Color\") shader.vSource += \"uniform vec3 u_lightColor;\\n\";\r\n        if (private.displacementTexture !== none) shader.vSource += \"uniform float u_displacementScale;\\n\";\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) shader.vSource += \"uniform sampler2D u_surface;\\n\";\r\n\r\n        if (private.normalMap !== none) shader.fSource += \"uniform sampler2D u_normalMap;\\n\";\r\n        if (private.textureCoords !== none) {\r\n            if (private.diffuseTexture !== none) shader.fSource += \"uniform sampler2D u_diffuse;\\n\";\r\n            if (private.emmissiveTexture !== none) shader.fSource += \"uniform sampler2D u_emmissive;\\n\";\r\n        }\r\n        if (private.ambientLight !== none) shader.fSource += \"uniform float u_ambientLight;\\n\";\r\n    }\r\n\r\n    private.addVaryingDeclarations = function (shader) {\r\n        const add = function (type, name) {\r\n            const statement = \"varying \" + type + \" \" + name + \";\\n\";\r\n            shader.vSource += statement;\r\n            shader.fSource += statement;\r\n        }\r\n\r\n        if (private.textureCoords !== none) add(private.textureCoords, \"v_texcoord\");\r\n        if (private.colors !== none) add(private.colors, \"v_color\");\r\n        if (private.directionalLight !== none) {\r\n            add(\"vec3\", \"v_lightDirection\");\r\n            if (private.directionalLight === \"Color\") add(\"vec3\", \"v_lightColor\");\r\n            if (private.normalMap === none) add(private.normals, \"v_normal\");\r\n        }\r\n    }\r\n\r\n    private.addLogic = function (shader) {\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  vec4 position = a_position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  vec2 position = a_position;\\n\";\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.vSource += \"  vec4 surface = texture2D(u_surface, a_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            if (private.verticies === \"XYZ\" && private.normals === \"vec3\") {\r\n                if (private.displacementTexture === \"Sunken\") shader.vSource += \"  float displacement = -surface.r;\\n\";\r\n                else if (private.displacementTexture === \"Signed\") shader.vSource += \"  float displacement = surface.r * 2.0 - 1.0;\\n\";\r\n                else if (private.displacementTexture === \"Raised\") shader.vSource += \"  float displacement = surface.r;\\n\";\r\n                shader.vSource += \"  position = vec4(position.xyz + (a_normal * displacement * u_displacementScale), position.w);\\n\";\r\n            }\r\n        }\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  position = u_clipMatrix * position;\\n\";\r\n        else if (private.verticies !== none) shader.vSource += \"  position = (u_clipMatrix * vec3(position, 1)).xy;\\n\";\r\n\r\n        if (private.verticies === \"XYZ\") shader.vSource += \"  gl_Position = position;\\n\";\r\n        else if (private.verticies === \"XY\") shader.vSource += \"  gl_Position = vec4(position, \" + private.z + \", 1);\\n\";\r\n        else if (private.verticies === \"XZ\") shader.vSource += \"  gl_Position = vec4(position.x, \" + private.y + \", position.y, 1);\\n\";\r\n        else if (private.verticies === \"YZ\") shader.vSource += \"  gl_Position = vec4(\" + private.x + \", position, 1);\\n\";\r\n\r\n        if (private.textureCoords !== none) shader.vSource += \"  v_texcoord = a_texcoord;\\n\";\r\n\r\n        if (private.directionalLight !== none) {\r\n            if (private.normalMap !== none) {\r\n                shader.vSource += \"  vec3 T = normalize(vec3(u_modelMatrix * vec4(a_tangent, 0.0)));\\n\";\r\n                if (private.bitangents !== none)\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(a_bitangent, 0.0)));\\n\";\r\n                else\r\n                    shader.vSource += \"  vec3 B = normalize(vec3(u_modelMatrix * vec4(cross(a_normal, a_tangent), 0.0)));\\n\";\r\n                shader.vSource += \"  vec3 N = normalize(vec3(u_modelMatrix * vec4(a_normal, 0.0)));\\n\";\r\n                shader.vSource += \"  mat3 TBN = transpose(mat3(T, B, N));\\n\";\r\n                shader.vSource += \"  v_lightDirection = TBN * u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = texture2D(u_normalMap, v_texcoord).rgb * 2.0 - 1.0;\\n\";\r\n            } else {\r\n                shader.vSource += \"  v_normal = (u_modelMatrix * vec4(a_normal, 0)).xyz;\\n\";\r\n                shader.vSource += \"  v_lightDirection = u_lightDirection;\\n\";\r\n                shader.fSource += \"  vec3 normal = normalize(v_normal);\\n\";\r\n            }\r\n\r\n            shader.fSource += \"  vec3 lightDirection = v_lightDirection;\\n\";\r\n            shader.fSource += \"  float light = max(dot(normal, lightDirection), 0.0);\\n\";\r\n            if (private.ambientLight !== none) shader.fSource += \"  light += u_ambientLight;\\n\";\r\n        } else {\r\n            if (private.ambientLight !== none) shader.fSource += \"  float light = u_ambientLight;\\n\";\r\n        }\r\n\r\n        if (private.directionalLight === \"Color\") \r\n            shader.vSource += \"  v_lightColor = u_lightColor;\\n\";\r\n\r\n        if (private.colors === none)\r\n            shader.fSource += \"  gl_FragColor = vec4(0, 0, 0, 1.0);\\n\";\r\n        else if (private.colors === \"vec4\") {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = v_color;\\n\";\r\n        } else {\r\n            shader.vSource += \"  v_color = a_color;\\n\";\r\n            shader.fSource += \"  gl_FragColor = vec4(v_color, 1.0);\\n\";\r\n        }\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.diffuseTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor += texture2D(u_diffuse, v_texcoord);\\n\";\r\n        }\r\n\r\n        if (private.ambientLight !== none || private.directionalLight !== none)\r\n            shader.fSource += \"  gl_FragColor.rgb *= light;\\n\";\r\n\r\n        if (private.textureCoords === \"vec2\") {\r\n            if (private.emmissiveTexture === \"RGB\")\r\n                shader.fSource += \"  gl_FragColor.rgb += texture2D(u_emmissive, v_texcoord).rgb;\\n\";\r\n        }\r\n    }\r\n\r\n    public.compile = function () {\r\n        const shader = {\r\n            name: private.name,\r\n            vSource: \"\",\r\n            fSource: \"precision mediump float;\\n\",\r\n            attributes: {},\r\n            uniforms: {},\r\n            is3d: private.matrix === \"mat4\",\r\n        };\r\n\r\n        private.addAttributeDeclarations(shader);\r\n        private.addUniformDeclarations(shader);\r\n        private.addVaryingDeclarations(shader);\r\n\r\n        if (private.directionalLight !== none) {\r\n            /*\r\n            shader.vSource += \"highp mat4 transpose(in highp mat4 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec4 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec4 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec4 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp vec4 i3 = inMatrix[3];\\n\";\r\n            shader.vSource += \"    highp mat4 outMatrix = mat4(\\n\";\r\n            shader.vSource += \"        vec4(i0.x, i1.x, i2.x, i3.x),\\n\";\r\n            shader.vSource += \"        vec4(i0.y, i1.y, i2.y, i3.y),\\n\";\r\n            shader.vSource += \"        vec4(i0.z, i1.z, i2.z, i3.z),\\n\";\r\n            shader.vSource += \"        vec4(i0.w, i1.w, i2.w, i3.w)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n            */\r\n            shader.vSource += \"highp mat3 transpose(in highp mat3 inMatrix) {\\n\";\r\n            shader.vSource += \"    highp vec3 i0 = inMatrix[0];\\n\";\r\n            shader.vSource += \"    highp vec3 i1 = inMatrix[1];\\n\";\r\n            shader.vSource += \"    highp vec3 i2 = inMatrix[2];\\n\";\r\n            shader.vSource += \"    highp mat3 outMatrix = mat3(\\n\";\r\n            shader.vSource += \"        vec3(i0.x, i1.x, i2.x),\\n\";\r\n            shader.vSource += \"        vec3(i0.y, i1.y, i2.y),\\n\";\r\n            shader.vSource += \"        vec3(i0.z, i1.z, i2.z)\\n\";\r\n            shader.vSource += \"    );\\n\";\r\n            shader.vSource += \"    return outMatrix;\\n\";\r\n            shader.vSource += \"}\\n\";\r\n        }\r\n\r\n        shader.vSource += \"void main() {\\n\";\r\n        shader.fSource += \"void main() {\\n\";\r\n\r\n        private.addLogic(shader);\r\n\r\n        shader.vSource += \"}\\n\";\r\n        shader.fSource += \"}\\n\";\r\n\r\n        if (frag.debugShaderBuilder) {\r\n            console.log(\"\\n// \" + shader.name + \" vertext shader\\n\" + shader.vSource);\r\n            console.log(\"\\n// \" + shader.name + \" fragment shader\\n\" + shader.fSource);\r\n        }\r\n\r\n        const vertexShader = frag.createShader(shader.name, frag.gl.VERTEX_SHADER, shader.vSource);\r\n        const fragmentShader = frag.createShader(shader.name, frag.gl.FRAGMENT_SHADER, shader.fSource);\r\n        shader.program = frag.createProgram(shader.name, vertexShader, fragmentShader);\r\n\r\n        if (!shader.program) return null;\r\n\r\n        const bindList = [];\r\n        const unbindList = [];\r\n\r\n        if (private.verticies !== none) {\r\n            shader.attributes.position = frag.gl.getAttribLocation(shader.program, \"a_position\");\r\n        }\r\n\r\n        if (private.colors !== none) {\r\n            shader.attributes.color = frag.gl.getAttribLocation(shader.program, \"a_color\");\r\n        }\r\n\r\n        if (private.textureCoords !== none) {\r\n            shader.attributes.texture = frag.gl.getAttribLocation(shader.program, \"a_texcoord\");\r\n        }\r\n\r\n        if (private.normals !== none) {\r\n            shader.attributes.normal = frag.gl.getAttribLocation(shader.program, \"a_normal\");\r\n        }\r\n\r\n        if (private.tangents !== none) {\r\n            shader.attributes.tangent = frag.gl.getAttribLocation(shader.program, \"a_tangent\");\r\n        }\r\n\r\n        if (private.bitangents !== none) {\r\n            shader.attributes.bitangent = frag.gl.getAttribLocation(shader.program, \"a_bitangent\");\r\n        }\r\n\r\n        if (private.matrix !== none) {\r\n            if (private.directionalLight !== none)\r\n                shader.uniforms.modelMatrix = frag.gl.getUniformLocation(shader.program, \"u_modelMatrix\");\r\n            shader.uniforms.clipMatrix = frag.gl.getUniformLocation(shader.program, \"u_clipMatrix\");\r\n        }\r\n\r\n        if (private.diffuseTexture !== none) {\r\n            shader.uniforms.diffuse = frag.gl.getUniformLocation(shader.program, \"u_diffuse\");\r\n        }\r\n\r\n        if (private.emmissiveTexture !== none) {\r\n            shader.uniforms.emmissive = frag.gl.getUniformLocation(shader.program, \"u_emmissive\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none || private.roughnessTexture !== none || private.shininessTexture != none) {\r\n            shader.uniforms.surface = frag.gl.getUniformLocation(shader.program, \"u_surface\");\r\n        }\r\n\r\n        if (private.displacementTexture !== none) {\r\n            shader.uniforms.displacementScale = frag.gl.getUniformLocation(shader.program, \"u_displacementScale\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.displacementScale, shader._displacementScale); });\r\n            shader._displacementScale = 0.2;\r\n            shader.displacementScale = function (scale) {\r\n                shader._displacementScale = scale;\r\n                return shader;\r\n            };\r\n        }\r\n\r\n        if (private.normalMap !== none) {\r\n            shader.uniforms.normalMap = frag.gl.getUniformLocation(shader.program, \"u_normalMap\");\r\n        }\r\n\r\n        if (private.ambientLight !== none) {\r\n            shader.uniforms.ambientLight = frag.gl.getUniformLocation(shader.program, \"u_ambientLight\");\r\n            bindList.push(function (gl) { gl.uniform1f(shader.uniforms.ambientLight, shader._ambientLight); });\r\n            shader._ambientLight = 0.5;\r\n        }\r\n\r\n        if (private.directionalLight !== none) {\r\n            shader.uniforms.lightDirection = frag.gl.getUniformLocation(shader.program, \"u_lightDirection\");\r\n            bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightDirection, shader._lightDirection); });\r\n\r\n            if (private.directionalLight === \"Color\"){\r\n                shader.uniforms.lightColor = frag.gl.getUniformLocation(shader.program, \"u_lightColor\");\r\n                bindList.push(function (gl) { gl.uniform3fv(shader.uniforms.lightColor, shader._lightColor); });\r\n\r\n                shader.lightColor = function(color) {\r\n                    shader._lightColor = color;\r\n                    return shader;\r\n                }\r\n            }\r\n\r\n            const balanceAmbient = private.ambientLight === \"Balanced\";\r\n            shader.lightDirection = function (direction) {\r\n                const length = window.frag.Vector.length(direction);\r\n                if (length > 1) {\r\n                    shader._lightDirection = [-direction[0] / length, -direction[1] / length, -direction[2] / length];\r\n                    if (balanceAmbient) shader._ambientLight = 0;\r\n                } else {\r\n                    shader._lightDirection = [-direction[0], -direction[1], -direction[2]];\r\n                    if (balanceAmbient) shader._ambientLight = 1 - length;\r\n                }\r\n                return shader;\r\n            };\r\n            if (private.directionalLight === \"White\")\r\n                shader.lightDirection([0.8, -0.2, 0.8]);\r\n            else if (private.directionalLight === \"Grey\")\r\n                shader.lightDirection([0.5, -0.1, 0.5]);\r\n        }\r\n\r\n        shader.bind = function (gl) {\r\n            gl.useProgram(shader.program);\r\n            bindList.forEach(f => f(gl));\r\n        }\r\n\r\n        shader.unbind = function (gl) {\r\n            unbindList.forEach(f => f(gl));\r\n        }\r\n\r\n        return shader;\r\n    }\r\n    return public;\r\n};\r\n","﻿window.frag.startFunctions.push(function(frag) {\r\n    frag.uiShader = frag.Shader()\r\n        .name(\"UI\")\r\n        .verticiesXY(-1)  // Renders in xy plane with z = -1\r\n        .matrix2D()       // Transformation matricies are 2D\r\n        .diffuseTexture() // Adds support for diffuse texture mapping\r\n        .compile();       // Compile the shader\r\n});\r\n","﻿// This cube has the minimum vertex count but only texture maps correctly on 4 sides\r\n// http://www.cs.umd.edu/gvil/papers/av_ts.pdf\r\nwindow.frag.BasicCube = function (options) {\r\n    options = options || {};\r\n\r\n    const u0 = 0;\r\n    const u1 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const verticies = [\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, -1,\r\n        -1, -1, -1,\r\n        +1, +1, +1,\r\n        -1, +1, +1,\r\n        -1, -1, +1,\r\n        +1, -1, +1,\r\n    ];\r\n\r\n    const uvs = [\r\n        u0, v3,\r\n        u0, v0,\r\n        u0, v2,\r\n        u0, v1,\r\n        u1, v3,\r\n        u1, v0,\r\n        u1, v1,\r\n        u1, v2,\r\n    ];\r\n\r\n    const draw = function (indexes) {\r\n        const v = [];\r\n        const u = [];\r\n        const c = options.color ? [] : undefined;\r\n        for (var i = 0; i < indexes.length; i++) {\r\n            const corner = indexes[i];\r\n            v.push(verticies[corner * 3 + 0]);\r\n            v.push(verticies[corner * 3 + 1]);\r\n            v.push(verticies[corner * 3 + 2]);\r\n\r\n            if (options.color) {\r\n                options.color.array.forEach(e => { c.push(e); });\r\n            }\r\n\r\n            u.push(uvs[corner * 2 + 0]);\r\n            u.push(uvs[corner * 2 + 1]);\r\n        }\r\n        return window.frag.MeshData().addTriangleStrip(v, c, u, v);\r\n    }\r\n\r\n    return draw([3, 2, 6, 7, 4, 2, 0, 3, 1, 6, 5, 4, 1, 0]);\r\n};","﻿// This cube consists of a single sub-mesh so that smooth shading works correctly\r\nwindow.frag.Cube = function (facets, options) {\r\n    options = options || {};\r\n    if (options.drawFront === undefined) options.drawFront = true;\r\n    if (options.drawBack === undefined) options.drawBack = true;\r\n    if (options.drawTop === undefined) options.drawTop = true;\r\n    if (options.drawBottom === undefined) options.drawBottom = true;\r\n    if (options.drawLeft === undefined) options.drawLeft = true;\r\n    if (options.drawRight === undefined) options.drawRight = true;\r\n\r\n    let u0 = 0;\r\n    let u1 = 1 / 4;\r\n    let u2 = 2 / 4;\r\n    let u3 = 3 / 4;\r\n    let u4 = 1;\r\n\r\n    let v0 = 0;\r\n    let v1 = 1 / 3;\r\n    let v2 = 2 / 3;\r\n    let v3 = 1;\r\n\r\n    const corners = [\r\n        [-1, -1, -1],\r\n        [+1, -1, -1],\r\n        [+1, +1, -1],\r\n        [-1, +1, -1],\r\n        [+1, -1, +1],\r\n        [-1, -1, +1],\r\n        [-1, +1, +1],\r\n        [+1, +1, +1],\r\n    ];\r\n\r\n    const verticies = [];\r\n    const uvs = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const addVertex = function(v) {\r\n        verticies.push(v[0]);\r\n        verticies.push(v[1]);\r\n        verticies.push(v[2]);\r\n        if (options.color) {\r\n            options.color.forEach(c => { colors.push(c); });\r\n        }\r\n    }\r\n\r\n    const addUv = function (u, v) {\r\n        uvs.push(u);\r\n        uvs.push(v);\r\n    }\r\n\r\n    const addFacetVerticies = function (bottomRight, topRight, bottomLeft, topLeft){\r\n        addVertex(bottomRight);\r\n        addVertex(topRight);\r\n        addVertex(bottomLeft);\r\n        addVertex(topLeft);\r\n        addVertex(bottomLeft);\r\n        addVertex(topRight);\r\n    }\r\n\r\n    const addFacetUvs = function (uLeft, vBottom, uRight, vTop) {\r\n        addUv(uRight, vBottom);\r\n        addUv(uRight, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uLeft, vTop);\r\n        addUv(uLeft, vBottom);\r\n        addUv(uRight, vTop);\r\n    }\r\n\r\n    const addFace = function (bottomRight, bottomLeft, topLeft, uLeft, vBottom, uRight, vTop) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const vFracLow = vFacet / facets;\r\n            const vFracHigh = (vFacet + 1) / facets;\r\n\r\n            const vFacetBottom = (vTop - vBottom) * vFracLow + vBottom;\r\n            const vFacetTop = (vTop - vBottom) * vFracHigh + vBottom;\r\n\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                const hFracLow = hFacet / facets;\r\n                const hFracHigh = (hFacet + 1) / facets;\r\n\r\n                const Vector = window.frag.Vector;\r\n                const up = Vector.sub(corners[topLeft], corners[bottomLeft]);\r\n                const right = Vector.sub(corners[bottomRight], corners[bottomLeft]);\r\n\r\n                const facetBottomLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracLow));\r\n                const facetBottomRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracLow));\r\n                const facetTopLeft = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracLow)), Vector.mult(up, vFracHigh));\r\n                const facetTopRight = Vector.add(Vector.add(corners[bottomLeft], Vector.mult(right, hFracHigh)), Vector.mult(up, vFracHigh));\r\n\r\n                addFacetVerticies(facetBottomRight, facetTopRight, facetBottomLeft, facetTopLeft);\r\n\r\n                const uFacetLeft = (uRight - uLeft) * hFracLow + uLeft;\r\n                const uFacetRight = (uRight - uLeft) * hFracHigh + uLeft;\r\n\r\n                addFacetUvs(uFacetLeft, vFacetBottom, uFacetRight, vFacetTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (options.duplicateTexture) {\r\n        if (options.drawFront) addFace(1, 0, 3, u4, v3, u0, v0); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u4, v3, u0, v0); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u4, v3, u0, v0); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u4, v3, u0, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u4, v3, u0, v0); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u4, v3, u0, v0); // top\r\n    } else {\r\n        if (options.drawFront) addFace(1, 0, 3, u1, v2, u0, v1); // front\r\n        if (options.drawBottom) addFace(4, 5, 0, u2, v2, u1, v1); // bottom\r\n        if (options.drawLeft) addFace(0, 5, 6, u2, v2, u1, v3); // left\r\n        if (options.drawRight) addFace(4, 1, 2, u1, v1, u2, v0); // right\r\n        if (options.drawBack) addFace(5, 4, 7, u2, v1, u3, v2); // back\r\n        if (options.drawTop) addFace(6, 7, 2, u3, v1, u4, v2); // top\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangles(verticies, colors, uvs);\r\n};","﻿window.frag.Cylinder = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const top = [0, 0, -1];\r\n    const topUvs = [0.5, 0.5];\r\n    const topNormals = [0, 0, -1];\r\n    const topColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const bottom = [0, 0, 1];\r\n    const bottomUvs = [0.5, 0.5];\r\n    const bottomNormals = [0, 0, 1];\r\n    const bottomColors = options.color ? Array.from(options.color) : undefined;\r\n\r\n    const side = [];\r\n    const sideColors = options.color ? [] : undefined;\r\n    const sideUvs = [];\r\n    const sideNormals = [];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        top.push(x);\r\n        top.push(y);\r\n        top.push(-1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => topColors.push(c));\r\n\r\n        topUvs.push((x + 1) * 0.5);\r\n        topUvs.push((y + 1) * 0.5);\r\n\r\n        topNormals.push(x);\r\n        topNormals.push(y);\r\n        topNormals.push(-1);\r\n\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(-1);\r\n        side.push(x);\r\n        side.push(y);\r\n        side.push(1);\r\n\r\n        if (options.color) {\r\n            options.color.forEach(c => sideColors.push(c));\r\n            options.color.forEach(c => sideColors.push(c));\r\n        }\r\n\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n        sideUvs.push((x + 1) * 0.5);\r\n        sideUvs.push((y + 1) * 0.5);\r\n\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n        sideNormals.push(x);\r\n        sideNormals.push(y);\r\n        sideNormals.push(0);\r\n    }\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        bottom.push(x);\r\n        bottom.push(y);\r\n        bottom.push(1);\r\n\r\n        if (options.color) \r\n            options.color.forEach(c => bottomColors.push(c));\r\n\r\n        bottomUvs.push((x + 1) * 0.5);\r\n        bottomUvs.push((y + 1) * 0.5);\r\n\r\n        bottomNormals.push(x);\r\n        bottomNormals.push(y);\r\n        bottomNormals.push(1);\r\n    }\r\n\r\n    side.push(0);\r\n    side.push(1);\r\n    side.push(1);\r\n    \r\n    if (options.color) \r\n        options.color.forEach(c => sideColors.push(c));\r\n\r\n    sideUvs.push(0.5);\r\n    sideUvs.push(1);\r\n\r\n    sideNormals.push(0);\r\n    sideNormals.push(1);\r\n    sideNormals.push(0);\r\n\r\n    return window.frag.MeshData()\r\n        .addTriangleFan(top, topColors, topUvs, topNormals)\r\n        .addTriangleFan(bottom, bottomColors, bottomUvs, bottomNormals)\r\n        .addTriangleStrip(side, sideColors, sideUvs, sideNormals);\r\n};","﻿window.frag.Disc = function (facets, options) {\r\n    facets = facets || 32;\r\n    options = options || {};\r\n\r\n    const verticies = [0, 0, 0];\r\n    const uvs = [0.5, 0.5];\r\n    const normals = [0, 0, -1];\r\n\r\n    const step = Math.PI * 2 / facets;\r\n\r\n    for (var i = 0; i <= facets; i++) {\r\n        const angle = -i * step;\r\n        const x = Math.sin(angle);\r\n        const y = Math.cos(angle);\r\n\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleFan(verticies, uvs, normals);\r\n};","﻿window.frag.Plane = function (facets, options) {\r\n    facets = facets || 1;\r\n    options = options || {};\r\n\r\n    if (facets === 1) {\r\n        const c = options.color || [0, 0, 0];\r\n        const data = new Float32Array([\r\n            1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, // verticies\r\n            c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2], c[0], c[1], c[2],  // colors\r\n            1, 0, 1, 1, 0, 0, 0, 1, // uvs\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, // normals \r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // tangents\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // bitangents\r\n        ]);\r\n\r\n        return window.frag.MeshData().fromBuffer(\r\n            data.buffer, 3, 4, window.frag.gl.TRIANGLE_STRIP,\r\n            0 * Float32Array.BYTES_PER_ELEMENT,\r\n            12 * Float32Array.BYTES_PER_ELEMENT,\r\n            24 * Float32Array.BYTES_PER_ELEMENT,\r\n            32 * Float32Array.BYTES_PER_ELEMENT,\r\n            44 * Float32Array.BYTES_PER_ELEMENT,\r\n            56 * Float32Array.BYTES_PER_ELEMENT,\r\n        );\r\n    }\r\n \r\n    const verticies = [];\r\n    const uvs = [];\r\n    const normals = [];\r\n    const colors = options.color ? [] : undefined;\r\n\r\n    const add = function (x, y) {\r\n        verticies.push(x);\r\n        verticies.push(y);\r\n        verticies.push(0);\r\n\r\n        if (options.color)\r\n            options.color.forEach(c => colors.push(c));\r\n\r\n        uvs.push((x + 1) * 0.5);\r\n        uvs.push((y + 1) * 0.5);\r\n\r\n        normals.push(0);\r\n        normals.push(0);\r\n        normals.push(-1);\r\n    }\r\n\r\n    for (var row = 0; row < facets; row++) {\r\n        const y0 = (facets - row - 1) * 2 / facets - 1;\r\n        const y1 = (facets - row) * 2 / facets - 1;\r\n        const evenRow = (row & 1) === 0;\r\n\r\n        if (evenRow) {\r\n            add(1, y0);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = (facets - column - 1) * 2 / facets - 1;\r\n                const x1 = (facets - column) * 2 / facets - 1;\r\n                add(x1, y1);\r\n                add(x0, y0);\r\n            }\r\n            add(-1, y1);\r\n        } else {\r\n            add(-1, y1);\r\n            for (var column = 0; column < facets; column++) {\r\n                const x0 = column * 2 / facets - 1;\r\n                const x1 = (column + 1) * 2 / facets - 1;\r\n                add(x0, y0);\r\n                add(x1, y1);\r\n            }\r\n            add(1, y0);\r\n        }\r\n    }\r\n\r\n    return window.frag.MeshData().addTriangleStrip(verticies, colors, uvs, normals);\r\n};","﻿// This cube has a separate sub-mesh for each face of the cube.\r\nwindow.frag.SeparatedCube = function (facets, options) {\r\n    facets = 1;\r\n    options = options || {};\r\n\r\n    const mesh = window.frag.MeshData();\r\n    \r\n    const u0 = 0;\r\n    const u1 = 1 / 4;\r\n    const u2 = 2 / 4;\r\n    const u3 = 3 / 4;\r\n    const u4 = 1;\r\n\r\n    const v0 = 0;\r\n    const v1 = 1 / 3;\r\n    const v2 = 2 / 3;\r\n    const v3 = 1;\r\n\r\n    const corners = [\r\n        -1, -1, -1,\r\n        +1, -1, -1,\r\n        +1, +1, -1,\r\n        -1, +1, -1,\r\n        +1, -1, +1,\r\n        -1, -1, +1,\r\n        -1, +1, +1,\r\n        +1, +1, +1,\r\n    ];\r\n\r\n    const addFace = function (indexes, t0, t1, normal) {\r\n        for (var vFacet = 0; vFacet < facets; vFacet++) {\r\n            const uvs = [t1[0], t0[1], t1[0], t1[1], t0[0], t0[1], t0[0], t1[1]];\r\n            const verticies = [];\r\n            const normals = [];\r\n            const colors = options.color ? [] : undefined;\r\n            for (hFacet = 0; hFacet < facets; hFacet++) {\r\n                for (var i = 0; i < 4; i++) {\r\n                    verticies.push(corners[indexes[i] * 3 + 0]);\r\n                    verticies.push(corners[indexes[i] * 3 + 1]);\r\n                    verticies.push(corners[indexes[i] * 3 + 2]);\r\n\r\n                    if (options.color)\r\n                        options.color.forEach(c => colors.push(c));\r\n        \r\n                    normals.push(normal[0]);\r\n                    normals.push(normal[1]);\r\n                    normals.push(normal[2]);\r\n                }\r\n            }\r\n            mesh.addTriangleStrip(verticies, colors, uvs, verticies);\r\n        }\r\n    }\r\n\r\n    addFace([1, 2, 0, 3], [u1, v2], [u0, v1], [0, 0, -1]); // front\r\n    addFace([4, 1, 5, 0], [u2, v2], [u1, v1], [0, -1, 0]); // bottom\r\n    addFace([0, 3, 5, 6], [u2, v2], [u1, v3], [-1, 0, 0]); // left\r\n    addFace([4, 7, 1, 2], [u1, v1], [u2, v0], [+1, 0, 0]); // right\r\n    addFace([5, 6, 4, 7], [u2, v1], [u3, v2], [0, 0, +1]); // back\r\n    addFace([6, 3, 7, 2], [u3, v1], [u4, v2], [0, +1, 0]); // top\r\n\r\n    return mesh;\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./Math/Vector\");\r\nrequire(\"./Math/Triangle\");\r\nrequire(\"./Math/Matrix\");\r\n\r\nrequire(\"./Framework/Init\");\r\nrequire(\"./Framework/Observable\");\r\nrequire(\"./Framework/Transform\");\r\nrequire(\"./Framework/Transform2D\");\r\nrequire(\"./Framework/Location\");\r\nrequire(\"./Framework/Framework\");\r\n\r\nrequire(\"./Shaders/Shader\");\r\nrequire(\"./Shaders/UiShader\");\r\n\r\nrequire(\"./Materials/Texture\");\r\nrequire(\"./Materials/Material\");\r\n\r\nrequire(\"./SceneGraph/VertexData\");\r\nrequire(\"./SceneGraph/MeshData\");\r\nrequire(\"./SceneGraph/MeshOptimizer\");\r\nrequire(\"./SceneGraph/Model\");\r\nrequire(\"./SceneGraph/ScenePosition\");\r\nrequire(\"./SceneGraph/SceneObject\");\r\nrequire(\"./SceneGraph/Scene\");\r\n\r\nrequire(\"./Cameras/UiCamera\");\r\nrequire(\"./Cameras/OrthographicCamera\");\r\nrequire(\"./Cameras/PerspectiveCamera\");\r\n\r\nrequire(\"./Animations/Animation\");\r\nrequire(\"./Animations/ObjectAnimationState\");\r\nrequire(\"./Animations/ModelAnimation\");\r\nrequire(\"./Animations/SceneObjectAnimation\");\r\nrequire(\"./Animations/ValueAnimationAction\");\r\nrequire(\"./Animations/KeyframeAnimationAction\");\r\nrequire(\"./Animations/ParallelAnimationAction\");\r\nrequire(\"./Animations/RepeatAnimationAction\");\r\nrequire(\"./Animations/PositionAnimationAction\");\r\n\r\nrequire(\"./Shapes/Plane\");\r\nrequire(\"./Shapes/Disc\");\r\nrequire(\"./Shapes/Cylinder\");\r\nrequire(\"./Shapes/BasicCube\");\r\nrequire(\"./Shapes/Cube\");\r\nrequire(\"./Shapes/SeparatedCube\");\r\n\r\nrequire(\"./Loaders/AssetCatalog\");\r\nrequire(\"./Loaders/MaterialLoader\");\r\nrequire(\"./Loaders/ModelLoader\");\r\n"],"sourceRoot":""}